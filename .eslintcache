[{"E:\\reactjs\\jobszone\\src\\index.js":"1","E:\\reactjs\\jobszone\\src\\App.js":"2","E:\\reactjs\\jobszone\\src\\reportWebVitals.js":"3","E:\\reactjs\\jobszone\\src\\components\\Search.js":"4","E:\\reactjs\\jobszone\\src\\screens\\CreateJobScreen.js":"5","E:\\reactjs\\jobszone\\src\\screens\\InternshipDetailsScreen.js":"6","E:\\reactjs\\jobszone\\src\\screens\\CreateInternshipScreen.js":"7","E:\\reactjs\\jobszone\\src\\screens\\JobDetailsScreen.js":"8","E:\\reactjs\\jobszone\\src\\screens\\ApplyJobScreen.js":"9","E:\\reactjs\\jobszone\\src\\screens\\JobScreen.js":"10","E:\\reactjs\\jobszone\\src\\components\\Footer.js":"11","E:\\reactjs\\jobszone\\src\\components\\CreateJobForm.js":"12","E:\\reactjs\\jobszone\\src\\components\\InternshipDetails.js":"13","E:\\reactjs\\jobszone\\src\\components\\JobCard.js":"14","E:\\reactjs\\jobszone\\src\\components\\CreateInternshipForm.js":"15","E:\\reactjs\\jobszone\\src\\components\\ApplyJobForm.js":"16","E:\\reactjs\\jobszone\\src\\components\\Header.js":"17","E:\\reactjs\\jobszone\\src\\components\\JobDetails.js":"18","E:\\reactjs\\jobszone\\src\\aws-exports.js":"19","E:\\reactjs\\jobszone\\src\\screens\\ProfileScreen.js":"20","E:\\reactjs\\jobszone\\src\\components\\ViewProfile.js":"21","E:\\reactjs\\jobszone\\src\\graphql\\queries.js":"22","E:\\reactjs\\jobszone\\src\\screens\\FirstRegisterScreen.js":"23","E:\\reactjs\\jobszone\\src\\components\\FirstRegister.js":"24","E:\\reactjs\\jobszone\\src\\graphql\\mutations.js":"25","E:\\reactjs\\jobszone\\src\\screens\\EditProfileScreen.js":"26","E:\\reactjs\\jobszone\\src\\components\\EditProfile.js":"27","E:\\reactjs\\jobszone\\src\\mutations.js":"28","E:\\reactjs\\jobszone\\src\\screens\\InternshipScreen.js":"29","E:\\reactjs\\jobszone\\src\\components\\InternshipCard.js":"30","E:\\reactjs\\jobszone\\src\\screens\\CompanyScreen.js":"31","E:\\reactjs\\jobszone\\src\\screens\\ViewAllJobsScreen.js":"32","E:\\reactjs\\jobszone\\src\\screens\\ViewAllInternshipsScreen.js":"33","E:\\reactjs\\jobszone\\src\\screens\\ViewJobApplicantsScreen.js":"34","E:\\reactjs\\jobszone\\src\\components\\MyAppications.js":"35","E:\\reactjs\\jobszone\\src\\screens\\MyAppicationsScreen.js":"36","E:\\reactjs\\jobszone\\src\\screens\\JobSearchScreen.js":"37","E:\\reactjs\\jobszone\\src\\components\\CompanyRegister.js":"38","E:\\reactjs\\jobszone\\src\\components\\EditCompanyProfile.js":"39","E:\\reactjs\\jobszone\\src\\screens\\AdminScreen.js":"40","E:\\reactjs\\jobszone\\src\\screens\\ViewAdminJobsScreen.js":"41","E:\\reactjs\\jobszone\\src\\screens\\ViewAdminInternshipsScreen.js":"42","E:\\reactjs\\jobszone\\src\\screens\\ViewAdminJobApplicantScreen.js":"43","E:\\reactjs\\jobszone\\src\\screens\\ViewJobRequestsScreen.js":"44","E:\\reactjs\\jobszone\\src\\screens\\ViewAllUsersScreen.js":"45","E:\\reactjs\\jobszone\\src\\screens\\ViewAllCompaniesScreen.js":"46"},{"size":541,"mtime":1612093271168,"results":"47","hashOfConfig":"48"},{"size":3954,"mtime":1612766822786,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"48"},{"size":798,"mtime":1612680000804,"results":"51","hashOfConfig":"48"},{"size":437,"mtime":1611913420707,"results":"52","hashOfConfig":"48"},{"size":402,"mtime":1611899209050,"results":"53","hashOfConfig":"48"},{"size":473,"mtime":1611937648474,"results":"54","hashOfConfig":"48"},{"size":367,"mtime":1611893777991,"results":"55","hashOfConfig":"48"},{"size":433,"mtime":1611940028988,"results":"56","hashOfConfig":"48"},{"size":1618,"mtime":1612785385586,"results":"57","hashOfConfig":"48"},{"size":1798,"mtime":1612418025519,"results":"58","hashOfConfig":"48"},{"size":10763,"mtime":1612785931643,"results":"59","hashOfConfig":"48"},{"size":3685,"mtime":1612500358737,"results":"60","hashOfConfig":"48"},{"size":1948,"mtime":1612460657241,"results":"61","hashOfConfig":"48"},{"size":12816,"mtime":1612785957530,"results":"62","hashOfConfig":"48"},{"size":7791,"mtime":1612640376623,"results":"63","hashOfConfig":"48"},{"size":2890,"mtime":1612759879845,"results":"64","hashOfConfig":"48"},{"size":3912,"mtime":1612720309859,"results":"65","hashOfConfig":"48"},{"size":839,"mtime":1612780515129,"results":"66","hashOfConfig":"48"},{"size":441,"mtime":1612154860050,"results":"67","hashOfConfig":"48"},{"size":2828,"mtime":1612714927926,"results":"68","hashOfConfig":"48"},{"size":16106,"mtime":1612780509879,"results":"69","hashOfConfig":"48"},{"size":1831,"mtime":1612718988498,"results":"70","hashOfConfig":"48"},{"size":5862,"mtime":1612713652705,"results":"71","hashOfConfig":"48"},{"size":21796,"mtime":1612780510471,"results":"72","hashOfConfig":"48"},{"size":1291,"mtime":1612714875470,"results":"73","hashOfConfig":"48"},{"size":6669,"mtime":1612715015641,"results":"74","hashOfConfig":"48"},{"size":474,"mtime":1612373152660,"results":"75","hashOfConfig":"48"},{"size":1748,"mtime":1612785551825,"results":"76","hashOfConfig":"48"},{"size":1965,"mtime":1612466102500,"results":"77","hashOfConfig":"48"},{"size":3759,"mtime":1612786027567,"results":"78","hashOfConfig":"48"},{"size":5000,"mtime":1612785568380,"results":"79","hashOfConfig":"48"},{"size":5128,"mtime":1612785568380,"results":"80","hashOfConfig":"48"},{"size":4170,"mtime":1612785568380,"results":"81","hashOfConfig":"48"},{"size":2764,"mtime":1612676850670,"results":"82","hashOfConfig":"48"},{"size":449,"mtime":1612675013255,"results":"83","hashOfConfig":"48"},{"size":3445,"mtime":1612683205339,"results":"84","hashOfConfig":"48"},{"size":5593,"mtime":1612703728135,"results":"85","hashOfConfig":"48"},{"size":6277,"mtime":1612714982420,"results":"86","hashOfConfig":"48"},{"size":3478,"mtime":1612780497881,"results":"87","hashOfConfig":"48"},{"size":5976,"mtime":1612785568380,"results":"88","hashOfConfig":"48"},{"size":6119,"mtime":1612784906471,"results":"89","hashOfConfig":"48"},{"size":4617,"mtime":1612785568380,"results":"90","hashOfConfig":"48"},{"size":5041,"mtime":1612785568380,"results":"91","hashOfConfig":"48"},{"size":4854,"mtime":1612785568380,"results":"92","hashOfConfig":"48"},{"size":6273,"mtime":1612785568380,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"w7g81v",{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"96"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"96"},"E:\\reactjs\\jobszone\\src\\index.js",[],["203","204"],"E:\\reactjs\\jobszone\\src\\App.js",["205","206","207","208","209","210","211"],"import React, { useEffect, useState } from 'react';\r\nimport {Route,Switch} from 'react-router-dom';\r\nimport Search from './components/Search';\r\nimport CreateJobScreen from './screens/CreateJobScreen';\r\nimport CreateInternshipScreen from './screens/CreateInternshipScreen';\r\nimport InternshipDetailsScreen from './screens/InternshipDetailsScreen';\r\nimport JobDetailsScreen from './screens/JobDetailsScreen';\r\nimport JobScreen from './screens/JobScreen';\r\nimport ApplyJobScreen from './screens/ApplyJobScreen';\r\nimport { withAuthenticator} from '@aws-amplify/ui-react';\r\nimport Amplify, { API, Auth, graphqlOperation } from \"aws-amplify\";\r\nimport awsExports from \"./aws-exports\";\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport FirstRegisterScreen from './screens/FirstRegisterScreen';\r\nimport {getUser, listUsers} from './graphql/queries';\r\nimport EditProfileScreen from './screens/EditProfileScreen';\r\nimport InternshipScreen from './screens/InternshipScreen';\r\nimport CompanyScreen from './screens/CompanyScreen';\r\nimport ViewAllJobsScreen from './screens/ViewAllJobsScreen';\r\nimport ViewAllInternshipsScreen from './screens/ViewAllInternshipsScreen';\r\nimport ViewJobApplicantsScreen from './screens/ViewJobApplicantsScreen';\r\nimport MyApplicationsScreen from './screens/MyAppicationsScreen';\r\nimport JobSearchScreen from './screens/JobSearchScreen';\r\nimport AdminScreen from './screens/AdminScreen';\r\nimport ViewAdminJobsScreen from './screens/ViewAdminJobsScreen';\r\nimport ViewAdminInternshipsScreen from './screens/ViewAdminInternshipsScreen';\r\nimport ViewAdminJobApplicantScreen from './screens/ViewAdminJobApplicantScreen';\r\nimport ViewJobRequestsScreen from './screens/ViewJobRequestsScreen';\r\nimport ViewAllUsersScreen from './screens/ViewAllUsersScreen';\r\nimport ViewAllCompaniesScreen from './screens/ViewAllCompaniesScreen';\r\nAmplify.configure(awsExports);\r\n\r\nfunction App(){\r\n\r\n    return(\r\n        <main>\r\n            <Switch>\r\n                <Route path=\"/\" component={FirstRegisterScreen} exact />\r\n                <Route path=\"/viewAllJobs\" component={JobScreen} />\r\n                <Route path=\"/internship\" component={InternshipScreen} />\r\n                <Route path=\"/job:jobId\" component={JobDetailsScreen} />\r\n                <Route path=\"/internship:jobId\" component={InternshipDetailsScreen} />\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/createJob\" component={CreateJobScreen} />\r\n                <Route path=\"/createInternship\" component={CreateInternshipScreen} />\r\n                <Route path=\"/apply:jobId\" component={ApplyJobScreen} />\r\n                <Route path=\"/profile\" component={ProfileScreen} />\r\n                <Route path=\"/editProfile\" component={EditProfileScreen} />\r\n                <Route path=\"/company\" component={CompanyScreen} />\r\n                <Route path=\"/viewJobs\" component={ViewAllJobsScreen} />\r\n                <Route path=\"/viewAllInternships\" component={ViewAllInternshipsScreen} />\r\n                <Route path=\"/viewJobApplicants:jobId\" component={ViewJobApplicantsScreen} />\r\n                <Route path=\"/myApplication\" component={MyApplicationsScreen} />\r\n                <Route path=\"/searchJob:searchTerm\" component={JobSearchScreen}/>\r\n                <Route path=\"/admin\" component={AdminScreen}/>\r\n                <Route path=\"/adminJobs\" component={ViewAdminJobsScreen}/>\r\n                <Route path=\"/adminInternship\" component={ViewAdminInternshipsScreen}/>\r\n                <Route path=\"/adminApplicants\" component={ViewAdminJobApplicantScreen}/>\r\n                <Route path=\"/approveJobs\" component={ViewJobRequestsScreen}/>\r\n                <Route path=\"/viewAllUsers\" component={ViewAllUsersScreen}/>\r\n                <Route path=\"/viewAllCompanies\" component={ViewAllCompaniesScreen}/>\r\n                \r\n            </Switch>\r\n        </main>\r\n        \r\n\r\n    );\r\n}\r\n\r\nexport default withAuthenticator(App);","E:\\reactjs\\jobszone\\src\\reportWebVitals.js",[],"E:\\reactjs\\jobszone\\src\\components\\Search.js",[],"E:\\reactjs\\jobszone\\src\\screens\\CreateJobScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\InternshipDetailsScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\CreateInternshipScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\JobDetailsScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\ApplyJobScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\JobScreen.js",["212"],"E:\\reactjs\\jobszone\\src\\components\\Footer.js",[],"E:\\reactjs\\jobszone\\src\\components\\CreateJobForm.js",["213"],"E:\\reactjs\\jobszone\\src\\components\\InternshipDetails.js",["214"],"import { API, graphqlOperation } from 'aws-amplify';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getJob } from '../graphql/queries';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nfunction InternshipDetails(){\r\n    let { jobId } = useParams();\r\n  const [jobDetails,setJobDetails]=useState([]);\r\n  const [jobDescription,setJobDescription]=useState([]);\r\n  const [desiredSkill,setDesiredSkill]=useState([]);\r\n  const [criteria,setCriteria]=useState([]);\r\n  const [perks,setPerks]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobDetails=async()=>{\r\n        const jobData=await API.graphql(\r\n          graphqlOperation(\r\n            getJob,{\r\n            id:jobId\r\n            }\r\n          )\r\n        );\r\n        \r\n      setJobDetails(jobData.data.getJob);\r\n      setJobDescription(jobData.data.getJob.jobDescription.items);\r\n      setDesiredSkill(jobData.data.getJob.jobSkills.items);\r\n      setCriteria(jobData.data.getJob.jobCretaria.items);\r\n      setPerks(jobData.data.getJob.perks.items);\r\n      \r\n\r\n      }\r\n\r\n      getJobDetails();\r\n\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n\r\n  },[]);\r\n    return (\r\n        <div className=\"jobContainer\">\r\n            <h1>{jobDetails.jobTitle}</h1>\r\n            <h4>{jobDetails.jobName}</h4>\r\n            <p>{jobDetails.companyName} <a href={`${jobDetails.comapanyWebsite}`}><FiExternalLink size={18}/></a></p>\r\n            <ul className=\"jobTopList\" >\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Stipend</li>\r\n                        <li><b>{jobDetails.salary}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Duration</li>\r\n                        <li><b>{jobDetails.duration}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Job Location</li>\r\n                        <li><b>{jobDetails.jobLocation}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Apply By</li>\r\n                        <li><b>{moment(jobDetails.lastDate).format('ll')}</b></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <h4 style={{marginTop:30}}>About Company<a href={`${jobDetails.comapanyWebsite}`}><FiExternalLink size={22}/></a></h4>\r\n            <p style={{marginTop:15}}>{jobDetails.aboutCompany}</p>\r\n            <h5>Job Description</h5>\r\n            <ul>\r\n                {jobDescription.map(jobDescription => <li>{jobDescription.content}</li>)}\r\n            </ul>\r\n            <h5>Desired Skills</h5>\r\n            <ul>\r\n            {desiredSkill.map(desiredSkill => <li>{desiredSkill.content}</li>)}\r\n            </ul>\r\n            <h5>Applying Critaria</h5>\r\n            <ul>\r\n            {criteria.map(criteria => <li>{criteria.content}</li>)}    \r\n            </ul>\r\n          <h5>Perks</h5>\r\n          <ul className=\"perks\">\r\n            {perks.map(perks => <li>{perks.content}</li>)}\r\n          </ul>\r\n          <h5>No of Position.</h5>\r\n          <p>{jobDetails.noOfPosition}</p>\r\n          <div className=\"text-center submitButton\">\r\n          <a href={`apply${jobId}`} style={{height:50,width:120,fontFamily:'sans-serif',fontSize:18,color:'white'}}  className=\"btn btn-primary\">Apply Now</a>\r\n          </div>\r\n              \r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default InternshipDetails;","E:\\reactjs\\jobszone\\src\\components\\JobCard.js",[],"E:\\reactjs\\jobszone\\src\\components\\CreateInternshipForm.js",[],"E:\\reactjs\\jobszone\\src\\components\\ApplyJobForm.js",[],"E:\\reactjs\\jobszone\\src\\components\\Header.js",[],"E:\\reactjs\\jobszone\\src\\components\\JobDetails.js",["215","216"],"\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getJob, listJobApplicants } from '../graphql/queries';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction JobDetails(props){\r\n  let { jobId } = useParams();\r\n  const [isApplied,setIsApplied]=useState(false);\r\n  const [jobDetails,setJobDetails]=useState([]);\r\n  const [jobDescription,setJobDescription]=useState([]);\r\n  const [desiredSkill,setDesiredSkill]=useState([]);\r\n  const [criteria,setCriteria]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobDetails=async()=>{\r\n        const jobData=await API.graphql(\r\n          graphqlOperation(\r\n            getJob,{\r\n            id:jobId\r\n            }\r\n          )\r\n        );\r\n        const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        const jobApplicants= await API.graphql(\r\n          graphqlOperation(\r\n            listJobApplicants,{\r\n              filter:{\r\n                userID: {contains: userInfo.attributes.sub},\r\n                jobID: {contains: jobId}\r\n              }\r\n            }\r\n          )\r\n        );\r\n        if(jobApplicants){\r\n          setIsApplied(true);\r\n        }\r\n        \r\n      setJobDetails(jobData.data.getJob);\r\n      setJobDescription(jobData.data.getJob.jobDescription.items);\r\n      setDesiredSkill(jobData.data.getJob.jobSkills.items);\r\n      setCriteria(jobData.data.getJob.jobCretaria.items);\r\n      \r\n\r\n      }\r\n\r\n      getJobDetails();\r\n\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n\r\n  },[]);\r\n     return (\r\n        <div>\r\n        <div className=\"jobContainer\">\r\n            <h1>{jobDetails.jobTitle}</h1>\r\n            <h4>{jobDetails.jobName}</h4>\r\n            <p>{jobDetails.companyName} <a href={`${jobDetails.comapanyWebsite}`}><FiExternalLink size={18}/></a></p>\r\n            <ul className=\"jobTopList\" >\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Salary</li>\r\n                        <li><b>{jobDetails.salary}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Experience</li>\r\n                        <li><b>{jobDetails.experience}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Job Location</li>\r\n                        <li><b>{jobDetails.jobLocation}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Apply By</li>\r\n                        <li><b>{moment(jobDetails.lastDate).format('ll')}</b></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <h4 style={{marginTop:30}}>About Company<a href={`${jobDetails.comapanyWebsite}`}><FiExternalLink size={22}/></a></h4>\r\n            <p style={{marginTop:15}}>{jobDetails.aboutCompany}</p>\r\n            <h5>Job Description</h5>\r\n            <ul>\r\n                {jobDescription.map(jobDescription => <li>{jobDescription.content}</li>)}\r\n            </ul>\r\n            <h5>Desired Skills</h5>\r\n            <ul>\r\n            {desiredSkill.map(desiredSkill => <li>{desiredSkill.content}</li>)}\r\n            </ul>\r\n            <h5>Applying Critaria</h5>\r\n            <ul>\r\n            {criteria.map(criteria => <li>{criteria.content}</li>)}\r\n                \r\n            </ul>\r\n            <div className=\"text-center submitButton\">\r\n            <a href={`apply${jobId}`} style={{height:50,width:120,fontFamily:'sans-serif',fontSize:18,color:'white'}}  className=\"btn btn-primary\">Apply Now</a>\r\n          </div>\r\n        </div>\r\n    </div>   \r\n\r\n    );\r\n}\r\n\r\nexport default JobDetails;","E:\\reactjs\\jobszone\\src\\aws-exports.js",[],"E:\\reactjs\\jobszone\\src\\screens\\ProfileScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\ViewProfile.js",[],"E:\\reactjs\\jobszone\\src\\graphql\\queries.js",[],"E:\\reactjs\\jobszone\\src\\screens\\FirstRegisterScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\FirstRegister.js",["217"],"import { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React,{useEffect, useState} from 'react';\r\nimport {createUser} from '../graphql/mutations';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n    const FirstRegister =(props)=>{\r\n    const[formState,updateFormState]=useState({\r\n      fname:'',lname:'',email:'',mobileNo:'',address:'',\r\n      age:20,sex:'',collegeName:'',degree:'',stream:'',\r\n      collegeAddress:'',courseDate:''\r\n\r\n    });\r\n    const[userId,setUserId]=useState('');\r\n\r\n    function handleChange(evt) {\r\n      const value = evt.target.value;\r\n      updateFormState({\r\n        ...formState,\r\n        [evt.target.name]: value\r\n      });\r\n    }\r\n \r\n   useEffect(()=>{\r\n       try{\r\n       const completeRegistration = async()=>{\r\n        const userInfo = await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        updateFormState({ email: userInfo.attributes.email });\r\n        updateFormState({ mobileNo: userInfo.attributes.phone_number });\r\n        setUserId(userInfo.attributes.sub)\r\n       }\r\n\r\n       completeRegistration();\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n   },[]);\r\n   const submitForm = async()=>{\r\n    await API.graphql(\r\n      graphqlOperation(\r\n        createUser,\r\n          {\r\n            input:{\r\n              id:`${userId}`,\r\n              firstName:formState.fname,\r\n              lastName :formState.lname,\r\n              age:formState.age,\r\n              sex:formState.sex,\r\n              email:formState.email,\r\n              mobileNo:formState.mobileNo,\r\n              userRole:\"jobSeeker\",\r\n              address:formState.address,\r\n              collegeName:formState.collegeName,\r\n              degree:formState.degree,\r\n              branch:formState.stream,\r\n              courseCompletion:formState.courseDate,\r\n              collegeAddress:formState.collegeAddress\r\n            }\r\n\r\n          }\r\n      ));\r\n      alert(\"Registration Sucessfull\");\r\n      props.history.push('/viewAllJobs');\r\n  }\r\n\r\n    return (\r\n\r\n\r\n    <div className=\"formContainer\">\r\n    <form >\r\n    <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"first-name\">First Name</label>\r\n      <input type=\"text\" value={formState.fname} onChange={handleChange} className=\"form-control\" name=\"fname\"  placeholder=\"Enter First Name\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"last-name\">Last Name</label>\r\n      <input type=\"text\" value={formState.lname} onChange={handleChange} className=\"form-control\" name=\"lname\"  placeholder=\"Enter Last Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"email\">Email</label>\r\n      <input type=\"email\" value={formState.email} onChange={handleChange} className=\"form-control\" name=\"email\"  placeholder=\"Enter Your Email\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"mobile-no\">Mobile No</label>\r\n      <input type=\"text\" value={formState.mobileNo}  onChange={handleChange} className=\"form-control\" name=\"mobileNo\"  placeholder=\"Enter Your Mobile No\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"age\">Age</label>\r\n      <input type=\"number\" value={formState.age} onChange={handleChange} className=\"form-control\" name=\"age\"  placeholder=\"Enter Your Age\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"sex\">Gender</label>\r\n    <select  value={formState.sex}  onChange={handleChange} className=\"form-control\" name=\"sex\" required>\r\n     <option value=''>Select Your Gender</option>\r\n      <option value='M'>Male</option>\r\n      <option value='F'>Female</option>\r\n      <option value='NB'>Can't prefer to say</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"address\">Current Address</label>\r\n      <input type=\"text\" value={formState.address}  onChange={handleChange} className=\"form-control\" name=\"address\"  placeholder=\"Enter Your Current Address\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"college-name\">College Name</label>\r\n      <input type=\"text\" value={formState.collegeName}  onChange={handleChange} className=\"form-control\" name=\"collegeName\"  placeholder=\"Enter Your College Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"degree\">Degree</label>\r\n      <input type=\"text\" value={formState.degree} onChange={handleChange} className=\"form-control\" name=\"degree\"  placeholder=\"Enter Your Degree Name\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"stream\">Stream</label>\r\n      <input type=\"text\" value={formState.stream}  onChange={handleChange} className=\"form-control\" name=\"stream\" placeholder=\"Enter Your Stream\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n   <div className=\"form-group col-md-6\">\r\n    <label for=\"collegeAddress\">College Address</label>\r\n   <input type=\"text\" value={formState.collegeAddress}  onChange={handleChange} className=\"form-control\" name=\"collegeAddress\"  required/>\r\n   </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"courseDate\">Course Completion Date</label>\r\n      <input type=\"date\" value={formState.courseDate}  onChange={handleChange} className=\"form-control\" name=\"courseDate\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"text-center submitButton\">\r\n            <button  onClick={submitForm} style={{height:50,width:120,fontFamily:'sans-serif',color:'white',fontSize:20}} name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n          </div>\r\n</form>\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\nexport default FirstRegister;","E:\\reactjs\\jobszone\\src\\graphql\\mutations.js",[],"E:\\reactjs\\jobszone\\src\\screens\\EditProfileScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\EditProfile.js",["218"],"import { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React,{useEffect, useState} from 'react';\r\nimport {createUser, updateUser} from '../graphql/mutations';\r\nimport { getUser } from '../graphql/queries';\r\n\r\n    const EditProfile =()=>{\r\n    const[formState,updateFormState]=useState({\r\n      fname:'',lname:'',email:'',mobileNo:'',address:'',\r\n      age:20,sex:'',collegeName:'',degree:'',stream:'',\r\n      collegeAddress:'',courseDate:''\r\n\r\n    });\r\n    const[userId,setUserId]=useState('');\r\n\r\n    function handleChange(evt) {\r\n      const value = evt.target.value;\r\n      updateFormState({\r\n        ...formState,\r\n        [evt.target.name]: value\r\n      });\r\n    }\r\n \r\n   useEffect(()=>{\r\n       try{\r\n       const completeRegistration = async()=>{\r\n        const userInfo = await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        const userData =await API.graphql(\r\n            graphqlOperation(\r\n                getUser,{id:userInfo.attributes.sub}\r\n            )\r\n        )\r\n        updateFormState({ email: userData.data.getUser.email });\r\n        updateFormState({ mobileNo: userData.data.getUser.mobileNo  });\r\n        updateFormState({ fname: userData.data.getUser.firstName });\r\n        updateFormState({ lname: userData.data.getUser.lastName  });\r\n        updateFormState({ address: userData.data.getUser.address });\r\n        updateFormState({ sex: userData.data.getUser.Sex });\r\n        updateFormState({ age: userData.data.getUser.Age });\r\n        updateFormState({ collegeName: userData.data.getUser.collegeName  });\r\n        updateFormState({ degree: userData.data.getUser.degree });\r\n        updateFormState({ stream: userData.data.getUser.branch  });\r\n        updateFormState({ collegeAddress: userData.data.getUser.collegeAddress });\r\n        updateFormState({ courseDate: userData.data.getUser.courseCompletion });\r\n        setUserId(userInfo.attributes.sub)\r\n       }\r\n\r\n       completeRegistration();\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n   },[]);\r\n   const submitForm = async()=>{\r\n    await API.graphql(\r\n      graphqlOperation(\r\n        updateUser,\r\n          {\r\n            input:{\r\n              id:`${userId}`,\r\n              firstName:formState.fname,\r\n              lastName :formState.lname,\r\n              age:formState.age,\r\n              sex:formState.sex,\r\n              email:formState.email,\r\n              mobileNo:formState.mobileNo,\r\n              address:formState.address,\r\n              collegeName:formState.collegeName,\r\n              degree:formState.degree,\r\n              branch:formState.stream,\r\n              courseCompletion:formState.courseDate,\r\n              collegeAddress:formState.collegeAddress\r\n            }\r\n\r\n          }\r\n      ))\r\n  }\r\n\r\n   console.log(formState);\r\n   console.log(userId);\r\n\r\n    return (\r\n\r\n\r\n    <div className=\"formContainer\">\r\n    <form >\r\n    <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"first-name\">First Name</label>\r\n      <input type=\"text\" value={formState.fname} onChange={handleChange} className=\"form-control\" name=\"fname\"  placeholder=\"Enter First Name\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"last-name\">Last Name</label>\r\n      <input type=\"text\" value={formState.lname} onChange={handleChange} className=\"form-control\" name=\"lname\"  placeholder=\"Enter Last Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"email\">Email</label>\r\n      <input type=\"email\" value={formState.email} onChange={handleChange} className=\"form-control\" name=\"email\"  placeholder=\"Enter Your Email\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"mobile-no\">Mobile No</label>\r\n      <input type=\"text\" value={formState.mobileNo}  onChange={handleChange} className=\"form-control\" name=\"mobileNo\"  placeholder=\"Enter Your Mobile No\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"age\">Age</label>\r\n      <input type=\"number\" value={formState.age} onChange={handleChange} className=\"form-control\" name=\"age\"  placeholder=\"Enter Your Age\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"sex\">Gender</label>\r\n    <select  value={formState.sex}  onChange={handleChange} className=\"form-control\" name=\"sex\" required>\r\n     <option value=''>Select Your Gender</option>\r\n      <option value='M'>Male</option>\r\n      <option value='F'>Female</option>\r\n      <option value='NB'>Can't prefer to say</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"address\">Current Address</label>\r\n      <input type=\"text\" value={formState.address}  onChange={handleChange} className=\"form-control\" name=\"address\"  placeholder=\"Enter Your Current Address\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"college-name\">College Name</label>\r\n      <input type=\"text\" value={formState.collegeName}  onChange={handleChange} className=\"form-control\" name=\"collegeName\"  placeholder=\"Enter Your College Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"degree\">Degree</label>\r\n      <input type=\"text\" value={formState.degree} onChange={handleChange} className=\"form-control\" name=\"degree\"  placeholder=\"Enter Your Degree Name\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"stream\">Stream</label>\r\n      <input type=\"text\" value={formState.stream}  onChange={handleChange} className=\"form-control\" name=\"stream\" placeholder=\"Enter Your Stream\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n   <div className=\"form-group col-md-6\">\r\n    <label for=\"collegeAddress\">College Address</label>\r\n   <input type=\"text\" value={formState.collegeAddress}  onChange={handleChange} className=\"form-control\" name=\"collegeAddress\"  required/>\r\n   </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"courseDate\">Course Completion Date</label>\r\n      <input type=\"date\" value={formState.courseDate}  onChange={handleChange} className=\"form-control\" name=\"courseDate\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"text-center submitButton\">\r\n            <button  onClick={submitForm} style={{height:50,width:120,fontFamily:'sans-serif',color:'white',fontSize:20}} name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n          </div>\r\n</form>\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\nexport default EditProfile;","E:\\reactjs\\jobszone\\src\\mutations.js",[],"E:\\reactjs\\jobszone\\src\\screens\\InternshipScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\InternshipCard.js",[],"E:\\reactjs\\jobszone\\src\\screens\\CompanyScreen.js",["219"],"E:\\reactjs\\jobszone\\src\\screens\\ViewAllJobsScreen.js",["220"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteJob } from '../graphql/mutations';\r\n\r\nfunction ViewAllJobsScreen(props){\r\n\r\n  const [jobs,setJobs]=useState([]);\r\n  useEffect(()=>{\r\n      try{\r\n        const getJobList= async()=>{\r\n        const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        const joblist=await API.graphql(\r\n          graphqlOperation(\r\n            listJobs,{\r\n                filter:{\r\n                  jobType: {contains: \"job\"},\r\n                  jobUserId: {contains: userInfo.attributes.sub}, \r\n                  jobStatus:{notContains:\"created\"}\r\n                }\r\n            }   \r\n        ));\r\n        setJobs(joblist.data.listJobs.items);\r\n        }\r\n      \r\n        getJobList();\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n  \r\n      }\r\n  \r\n    },[]);\r\n\r\n    async function deleteThisJob (jobId){\r\n      await API.graphql(\r\n        graphqlOperation(\r\n          deleteJob,{\r\n            input:{\r\n              id:jobId\r\n            }\r\n          }\r\n        )\r\n      );\r\n      alert(\"Job Deleted Sucessfully\");\r\n      window.location.reload();\r\n    }; \r\n\r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n          <ul class=\"menu\">\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"company\">Dashboard</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllJobs\">View jobs</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllInternships\">View internships</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <main class=\"admin__main\">\r\n        <h2 style={{color:'rebeccapurple'}}>All Jobs </h2>\r\n          <p style={{color:'rebeccapurple'}}>Posted By You</p>\r\n          <div class=\"dashboard\">\r\n          <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Job Name</th>\r\n                        <th>Job Location</th>\r\n                        <th>Post Date</th>\r\n                        <th>Last Date</th>\r\n                        <th>View Applicants</th>\r\n                        <th>View Job Details</th>\r\n                        <th>Edit Job Details</th>\r\n                        <th>Delete Job</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobs.map(jobs=>\r\n                                <tr>\r\n                                    <td>{jobs.jobName}</td>\r\n                                    <td>{jobs.jobLocation}</td>\r\n                                    <td>{moment(jobs.createdAt).format('ll')}</td>\r\n                                    <td>{moment(jobs.lastDate).format('ll')}</td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/viewJobApplicants${jobs.id}`\r\n                                            }}>View</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/job${jobs.id}`\r\n                                            }}>View</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${jobs.id}`\r\n                                            }}>Edit</Link>\r\n                                    </td>\r\n                                    <td><Link onClick={() =>{deleteThisJob(jobs.id)}} style={{color:'black'}}>Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2021 JobsZone\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewAllJobsScreen);","E:\\reactjs\\jobszone\\src\\screens\\ViewAllInternshipsScreen.js",["221"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteJob } from '../graphql/mutations';\r\n\r\nfunction ViewAllInternshipsScreen(){\r\n    const [jobs,setJobs]=useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n          const getJobList= async()=>{\r\n            const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n            const joblist=await API.graphql(\r\n              graphqlOperation(\r\n                listJobs,{\r\n                    filter:{\r\n                      jobType: {contains: \"internship\"},\r\n                      jobUserId: {contains: userInfo.attributes.sub},\r\n                      jobStatus:{notContains:\"created\"}\r\n                    }\r\n                }   \r\n            ));\r\n          setJobs(joblist.data.listJobs.items);\r\n          }\r\n        \r\n          getJobList();\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n    \r\n        }\r\n    \r\n      },[]);\r\n      async function deleteThisJob (jobId){\r\n        await API.graphql(\r\n          graphqlOperation(\r\n            deleteJob,{\r\n              input:{\r\n                id:jobId\r\n              }\r\n            }\r\n          )\r\n        );\r\n        alert(\"Job Deleted Sucessfully\");\r\n        window.location.reload();\r\n      }; \r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n          <ul class=\"menu\">\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"company\">Dashboard</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllJobs\">View jobs</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllInternships\">View internships</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <main class=\"admin__main\">\r\n          <h2 style={{color:'rebeccapurple'}}>All Internships </h2>\r\n          <p style={{color:'rebeccapurple'}}>Posted By You</p>\r\n          <div class=\"dashboard\">\r\n            <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Internship Name</th>\r\n                        <th>Internship Location</th>\r\n                        <th>Post Date</th>\r\n                        <th>Last Date</th>\r\n                        <th>View Applicants</th>\r\n                        <th>View Internship Details</th>\r\n                        <th>Edit Internship Details</th>\r\n                        <th>Delete Internship</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobs.map(jobs=>\r\n                                <tr>\r\n                                    <td>{jobs.jobName}</td>\r\n                                    <td>{jobs.jobLocation}</td>\r\n                                    <td>{moment(jobs.createdAt).format('ll')}</td>\r\n                                    <td>{moment(jobs.lastDate).format('ll')}</td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/viewJobApplicants${jobs.id}`\r\n                                            }}>View</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/internship${jobs.id}`\r\n                                            }}>View</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${jobs.id}`\r\n                                            }}>Edit</Link>\r\n                                    </td>\r\n                                    <td><Link onClick={() =>{deleteThisJob(jobs.id)}} style={{color:'black'}}>Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2021 JobsZone\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ViewAllInternshipsScreen;","E:\\reactjs\\jobszone\\src\\screens\\ViewJobApplicantsScreen.js",["222","223"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, graphqlOperation, Storage } from 'aws-amplify';\r\nimport {listJobApplicants} from '../graphql/queries';\r\n\r\nimport {Link, useParams, withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction ViewJobApplicantsScreen(props){\r\n    const {jobId} =useParams();\r\n    const [jobApplicants,setJobApplicants]=useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n          const getJobApplicant=async()=>{\r\n          const AllApplicants=await API.graphql(\r\n            graphqlOperation(\r\n              listJobApplicants,{\r\n                filter:{\r\n                  jobID: {contains: jobId}\r\n                }\r\n              }\r\n            )\r\n          )\r\n          setJobApplicants(AllApplicants.data.listJobApplicants.items)\r\n         \r\n          }\r\n        \r\n          getJobApplicant();\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n    \r\n        }\r\n    \r\n      },[]);\r\n      const getResumeUrl=async(resumeFile)=>{\r\n        const resumeUrl=await Storage.get(resumeFile);\r\n        console.log(resumeUrl);\r\n        window.open(resumeUrl, '_blank', 'noopener,noreferrer')\r\n        \r\n      }\r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n          <ul class=\"menu\">\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"company\">Dashboard</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllJobs\">View jobs</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllInternships\">View internships</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <main class=\"admin__main\">\r\n\r\n          <h2 style={{color:'rebeccapurple'}}>All Applicants </h2>\r\n          <p style={{color:'rebeccapurple'}}>For job/internship</p>\r\n          <div class=\"dashboard\">\r\n            <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Name</th>\r\n                        <th>College</th>\r\n                        <th>Email</th>\r\n                        <th>Mobile No.</th>\r\n                        <th>Applied Date</th>\r\n                        <th>View Resume</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobApplicants.map(jobApplicants=>\r\n                     \r\n                                <tr>\r\n                                    <td>{jobApplicants.user.firstName} {jobApplicants.user.lastName}</td>\r\n                                    <td>{jobApplicants.user.collegeName}</td>\r\n                                    <td>{jobApplicants.user.email}</td>\r\n                                    <td>{jobApplicants.user.mobileNo}</td>\r\n                                    <td>{moment(jobApplicants.createdAt).format('ll')}</td>\r\n                                    <td><Link onClick={() =>{getResumeUrl(jobApplicants.user.resumeFile)}} style={{color:'black'}}>View</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2018 Grid Inc.\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewJobApplicantsScreen);","E:\\reactjs\\jobszone\\src\\components\\MyAppications.js",[],"E:\\reactjs\\jobszone\\src\\screens\\MyAppicationsScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\JobSearchScreen.js",["224"],"import React, { useEffect, useState } from 'react';\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport './screensStyle.css';\r\nimport Search from '../components/Search';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction JobSearchScreen() {\r\n  let {searchTerm}=useParams();\r\n  console.log(searchTerm);\r\n  const isTablet = useMediaQuery({ query: '(max-width: 1100px)' })\r\n  const isMobile = useMediaQuery({\r\n    query: '(max-width: 600px)'\r\n  })\r\n  const [jobsByJobName,setJobsByJobName]=useState([]);\r\n  const [jobsByLocation,setJobsByLocation]=useState([]);\r\n  const [jobsByCompanyName,setJobsByCompanyName]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobList= async()=>{\r\n      const joblistByJobName=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n            filter:{\r\n                jobName: {contains: searchTerm}\r\n              } \r\n            }\r\n      ));\r\n      const joblistByCompanyName=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n            filter:{\r\n                companyName: {contains: searchTerm}\r\n              } \r\n            }\r\n      ));\r\n      const joblistByLocation=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n            filter:{\r\n                jobLocation: {contains: searchTerm}\r\n              } \r\n            }\r\n      ));\r\n      setJobsByJobName(joblistByJobName.data.listJobs.items);\r\n      setJobsByCompanyName(joblistByCompanyName.data.listJobs.items);\r\n      setJobsByLocation(joblistByLocation.data.listJobs.items);\r\n      }\r\n    \r\n      getJobList();\r\n    }\r\n    catch{\r\n\r\n    }\r\n\r\n  },[]);\r\n  return (\r\n    <div >\r\n     <Header />\r\n     <div className=\"LargeSearchContainer\" style={{marginTop:100,marginLeft:400}} >\r\n     <Search \r\n     searchValue={searchTerm}\r\n     />\r\n     </div>\r\n     <div className={ (isMobile) ? \"JobsSmall\" : ((isTablet) ? \"JobsMedium\" : \"JobsLarge\")} >\r\n     {\r\n       jobsByJobName.map(jobsByJobName => <JobCard \r\n        jobID={jobsByJobName.id}\r\n        companyName={jobsByJobName.companyName}\r\n        lastDate={jobsByJobName.lastDate}\r\n        role={jobsByJobName.jobName}\r\n        salary={jobsByJobName.salary}\r\n        experience={jobsByJobName.experience}\r\n        location={jobsByJobName.jobLocation}\r\n        />\r\n       )\r\n     }\r\n     {\r\n       jobsByCompanyName.map(jobsByCompanyName => <JobCard \r\n        jobID={jobsByCompanyName.id}\r\n        companyName={jobsByCompanyName.companyName}\r\n        lastDate={jobsByCompanyName.lastDate}\r\n        role={jobsByCompanyName.jobName}\r\n        salary={jobsByCompanyName.salary}\r\n        experience={jobsByCompanyName.experience}\r\n        location={jobsByLocation.jobLocation}\r\n        />\r\n       )\r\n     }\r\n     {\r\n       jobsByLocation.map(jobsByLocation => <JobCard \r\n        jobID={jobsByLocation.id}\r\n        companyName={jobsByLocation.companyName}\r\n        lastDate={jobsByLocation.lastDate}\r\n        role={jobsByLocation.jobName}\r\n        salary={jobsByLocation.salary}\r\n        experience={jobsByLocation.experience}\r\n        location={jobsByLocation.jobLocation}\r\n        />\r\n       )\r\n     }\r\n     </div>\r\n     <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobSearchScreen;\r\n","E:\\reactjs\\jobszone\\src\\components\\CompanyRegister.js",["225"],"import { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React,{useEffect, useState} from 'react';\r\nimport {createUser} from '../graphql/mutations';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n    const CompanyRegister =(props)=>{\r\n    const[formState,updateFormState]=useState({\r\n      fname:'',lname:'',email:'',mobileNo:'',address:'',\r\n      age:20,sex:'',companyName:'',userPost:'',companyWebsite:'',\r\n      officeAddress:''\r\n\r\n    });\r\n    const[userId,setUserId]=useState('');\r\n\r\n    function handleChange(evt) {\r\n      const value = evt.target.value;\r\n      updateFormState({\r\n        ...formState,\r\n        [evt.target.name]: value\r\n      });\r\n    }\r\n \r\n   useEffect(()=>{\r\n       try{\r\n       const completeRegistration = async()=>{\r\n        const userInfo = await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        updateFormState({ email: userInfo.attributes.email });\r\n        updateFormState({ mobileNo: userInfo.attributes.phone_number });\r\n        setUserId(userInfo.attributes.sub)\r\n       }\r\n\r\n       completeRegistration();\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n   },[]);\r\n   const submitForm = async()=>{\r\n    await API.graphql(\r\n      graphqlOperation(\r\n        createUser,\r\n          {\r\n            input:{\r\n              id:`${userId}`,\r\n              firstName:formState.fname,\r\n              lastName :formState.lname,\r\n              age:formState.age,\r\n              sex:formState.sex,\r\n              email:formState.email,\r\n              mobileNo:formState.mobileNo,\r\n              address:formState.address,\r\n              companyName:formState.companyName,\r\n              companyWebsite:formState.companyWebsite,\r\n              userPost:formState.userPost,\r\n              officeAddress:formState.officeAddress\r\n            }\r\n\r\n          }\r\n      ));\r\n      alert(\"Registration Sucessfull\");\r\n      props.history.push('/viewAllJobs');\r\n  }\r\n\r\n    return (\r\n\r\n\r\n    <div className=\"formContainer\">\r\n    <form >\r\n    <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"first-name\">First Name</label>\r\n      <input type=\"text\" value={formState.fname} onChange={handleChange} className=\"form-control\" name=\"fname\"  placeholder=\"Enter First Name\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"last-name\">Last Name</label>\r\n      <input type=\"text\" value={formState.lname} onChange={handleChange} className=\"form-control\" name=\"lname\"  placeholder=\"Enter Last Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"email\">Email</label>\r\n      <input type=\"email\" value={formState.email} onChange={handleChange} className=\"form-control\" name=\"email\"  placeholder=\"Enter Your Email\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"mobile-no\">Mobile No</label>\r\n      <input type=\"text\" value={formState.mobileNo}  onChange={handleChange} className=\"form-control\" name=\"mobileNo\"  placeholder=\"Enter Your Mobile No\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"age\">Age</label>\r\n      <input type=\"number\" value={formState.age} onChange={handleChange} className=\"form-control\" name=\"age\"  placeholder=\"Enter Your Age\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"sex\">Gender</label>\r\n    <select  value={formState.sex}  onChange={handleChange} className=\"form-control\" name=\"sex\" required>\r\n     <option value=''>Select Your Gender</option>\r\n      <option value='M'>Male</option>\r\n      <option value='F'>Female</option>\r\n      <option value='NB'>Can't prefer to say</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"address\">Current Address</label>\r\n      <input type=\"text\" value={formState.address}  onChange={handleChange} className=\"form-control\" name=\"address\"  placeholder=\"Enter Your Current Address\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"company-name\">Comapny Name</label>\r\n      <input type=\"text\" value={formState.companyName}  onChange={handleChange} className=\"form-control\" name=\"collegeName\"  placeholder=\"Enter Your Organization Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"userPost\">Your Designation</label>\r\n      <input type=\"text\" value={formState.userPost} onChange={handleChange} className=\"form-control\" name=\"userPost\"  placeholder=\"Enter Your Designation in Company\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"stream\">Company Website</label>\r\n      <input type=\"text\" value={formState.companyWebsite}  onChange={handleChange} className=\"form-control\" name=\"companyWebsite\" placeholder=\"Enter Your Company Website\" required/>\r\n    </div>\r\n  </div>\r\n   <div className=\"form-group\">\r\n    <label for=\"officeAddress\">Office Address</label>\r\n    <input type=\"text\" value={formState.officeAddress}  onChange={handleChange} className=\"form-control\" name=\"officeAddress\" placeholder=\"Enter Your Company Website\" required/>\r\n   </div>\r\n  <div className=\"text-center submitButton\">\r\n            <button  onClick={submitForm} style={{height:50,width:120,fontFamily:'sans-serif',color:'white',fontSize:20}} name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n          </div>\r\n</form>\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\nexport default CompanyRegister;","E:\\reactjs\\jobszone\\src\\components\\EditCompanyProfile.js",["226"],"import { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React,{useEffect, useState} from 'react';\r\nimport {createUser, updateUser} from '../graphql/mutations';\r\nimport { getUser } from '../graphql/queries';\r\n\r\n    const EditCompanyProfile =()=>{\r\n        const[formState,updateFormState]=useState({\r\n            fname:'',lname:'',email:'',mobileNo:'',address:'',\r\n            age:20,sex:'',companyName:'',userPost:'',companyWebsite:'',\r\n            officeAddress:''\r\n      \r\n          });\r\n    const[userId,setUserId]=useState('');\r\n\r\n    function handleChange(evt) {\r\n      const value = evt.target.value;\r\n      updateFormState({\r\n        ...formState,\r\n        [evt.target.name]: value\r\n      });\r\n    }\r\n \r\n   useEffect(()=>{\r\n       try{\r\n       const completeRegistration = async()=>{\r\n        const userInfo = await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        const userData =await API.graphql(\r\n            graphqlOperation(\r\n                getUser,{id:userInfo.attributes.sub}\r\n            )\r\n        )\r\n        updateFormState({ \r\n            email: userData.data.getUser.email,\r\n            mobileNo: userData.data.getUser.mobileNo,\r\n            fname: userData.data.getUser.firstName,\r\n            lname: userData.data.getUser.lastName,\r\n            address: userData.data.getUser.address,\r\n            sex: userData.data.getUser.sex,\r\n            age: userData.data.getUser.age,\r\n            companyName: userData.data.getUser.companyName,\r\n            companyWebsite: userData.data.getUser.companyWebsite,\r\n            userPost: userData.data.getUser.userPost,\r\n            officeAddress: userData.data.getUser.officeAddress\r\n         });\r\n        setUserId(userInfo.attributes.sub)\r\n       }\r\n\r\n       completeRegistration();\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n   },[]);\r\n   const submitForm = async()=>{\r\n    await API.graphql(\r\n      graphqlOperation(\r\n        updateUser,\r\n          {\r\n            input:{\r\n              id:`${userId}`,\r\n              firstName:formState.fname,\r\n              lastName :formState.lname,\r\n              age:formState.age,\r\n              sex:formState.sex,\r\n              email:formState.email,\r\n              mobileNo:formState.mobileNo,\r\n              address:formState.address,\r\n              collegeName:formState.collegeName,\r\n              degree:formState.degree,\r\n              branch:formState.stream,\r\n              courseCompletion:formState.courseDate,\r\n              collegeAddress:formState.collegeAddress\r\n            }\r\n\r\n          }\r\n      ))\r\n  }\r\n\r\n   console.log(formState);\r\n   console.log(userId);\r\n\r\n    return (\r\n\r\n\r\n    <div className=\"formContainer\">\r\n    <form >\r\n    <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"first-name\">First Name</label>\r\n      <input type=\"text\" value={formState.fname} onChange={handleChange} className=\"form-control\" name=\"fname\"  placeholder=\"Enter First Name\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"last-name\">Last Name</label>\r\n      <input type=\"text\" value={formState.lname} onChange={handleChange} className=\"form-control\" name=\"lname\"  placeholder=\"Enter Last Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"email\">Email</label>\r\n      <input type=\"email\" value={formState.email} onChange={handleChange} className=\"form-control\" name=\"email\"  placeholder=\"Enter Your Email\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"mobile-no\">Mobile No</label>\r\n      <input type=\"text\" value={formState.mobileNo}  onChange={handleChange} className=\"form-control\" name=\"mobileNo\"  placeholder=\"Enter Your Mobile No\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"age\">Age</label>\r\n      <input type=\"number\" value={formState.age} onChange={handleChange} className=\"form-control\" name=\"age\"  placeholder=\"Enter Your Age\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"sex\">Gender</label>\r\n    <select  value={formState.sex}  onChange={handleChange} className=\"form-control\" name=\"sex\" required>\r\n     <option value={formState.sex}>Select Your Gender</option>\r\n      <option value='M'>Male</option>\r\n      <option value='F'>Female</option>\r\n      <option value='NB'>Can't prefer to say</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"address\">Current Address</label>\r\n      <input type=\"text\" value={formState.address}  onChange={handleChange} className=\"form-control\" name=\"address\"  placeholder=\"Enter Your Current Address\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"coompany-name\">Company Name</label>\r\n      <input type=\"text\" value={formState.companyName}  onChange={handleChange} className=\"form-control\" name=\"companyName\"  placeholder=\"Enter Your Organization Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"companyWebsite\">Company Website</label>\r\n      <input type=\"text\" value={formState.companyWebsite} onChange={handleChange} className=\"form-control\" name=\"companyWebsite\"  placeholder=\"Enter Company Official Website\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"userPost\">Your Designation</label>\r\n      <input type=\"text\" value={formState.userPost}  onChange={handleChange} className=\"form-control\" name=\"userPost\" placeholder=\"Enter Your Designation\" required/>\r\n    </div>\r\n  </div>\r\n   <div className=\"form-group\">\r\n    <label for=\"officeAddress\">Office Address</label>\r\n   <input type=\"text\" value={formState.officeAddress}  onChange={handleChange} className=\"form-control\" name=\"officeAddress\"  required/>\r\n   </div>\r\n  <div className=\"text-center submitButton\">\r\n            <button  onClick={submitForm} style={{height:50,width:120,fontFamily:'sans-serif',color:'white',fontSize:20}} name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n          </div>\r\n</form>\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\nexport default EditCompanyProfile;","E:\\reactjs\\jobszone\\src\\screens\\AdminScreen.js",["227"],"E:\\reactjs\\jobszone\\src\\screens\\ViewAdminJobsScreen.js",["228","229"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteJob, updateJob } from '../graphql/mutations';\r\n\r\nfunction ViewAdminJobsScreen(props){\r\n\r\n  const [jobs,setJobs]=useState([]);\r\n  useEffect(()=>{\r\n      try{\r\n        const getJobList= async()=>{\r\n        const joblist=await API.graphql(\r\n          graphqlOperation(\r\n            listJobs,{\r\n                filter:{\r\n                  jobType: {contains: \"job\"},\r\n                  jobStatus:{notContains:\"created\"}\r\n                }\r\n            }   \r\n        ));\r\n        setJobs(joblist.data.listJobs.items);\r\n        }\r\n      \r\n        getJobList();\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n  \r\n      }\r\n  \r\n    },[]);\r\n\r\n    async function deleteThisJob (jobId){\r\n      await API.graphql(\r\n        graphqlOperation(\r\n          deleteJob,{\r\n            input:{\r\n              id:jobId\r\n            }\r\n          }\r\n        )\r\n      );\r\n      alert(\"Job Deleted Sucessfully\");\r\n      window.location.reload();\r\n    }; \r\n    const changeJobStatus=async(jobId,currentStatus)=>{\r\n\r\n      if(currentStatus===\"active\"){\r\n        await API.graphql(\r\n          graphqlOperation(\r\n            updateJob,\r\n            {\r\n              input:{\r\n                id:jobId,\r\n                jobStatus:\"inactive\"\r\n              }\r\n            }\r\n          )\r\n        );\r\n\r\n      }else{\r\n        await API.graphql(\r\n          graphqlOperation(\r\n            updateJob,\r\n            {\r\n              input:{\r\n                id:jobId,\r\n                jobStatus:\"active\"\r\n              }\r\n            }\r\n          )\r\n        );\r\n\r\n      }\r\n      window.location.reload();\r\n\r\n    } \r\n\r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"admin\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"approveJobs\">View all jobs requests</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminInternship\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllUsers\">View All users</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllCompanies\">View All Companies</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n        <main class=\"admin__main\">\r\n        <h2 style={{color:'rebeccapurple'}}>All Jobs </h2>\r\n          <p style={{color:'rebeccapurple'}}>Posted By Companies</p>\r\n          <div class=\"dashboard\">\r\n          <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Job Name</th>\r\n                        <th>Company Name</th>\r\n                        <th>Location</th>\r\n                        <th>Post Date</th>\r\n                        <th>Last Date</th>\r\n                        <th>Current Status</th>\r\n                        <th>View Applicants</th>\r\n                        <th>Edit Details</th>\r\n                        <th>Delete</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobs.map(jobs=>\r\n                                <tr>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/job${jobs.id}`\r\n                                            }}>{jobs.jobName}</Link></td>\r\n                                    <td>{jobs.companyName}</td>        \r\n                                    <td>{jobs.jobLocation}</td>\r\n                                    <td>{moment(jobs.createdAt).format('ll')}</td>\r\n                                    <td>{moment(jobs.lastDate).format('ll')}</td>\r\n                                    <td><Link onClick={() =>{changeJobStatus(jobs.id,jobs.jobStatus)}}  style={{color:'black'}} >{jobs.jobStatus}</Link>\r\n                                    </td>\r\n\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/viewJobApplicants${jobs.id}`\r\n                                            }}>View</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${jobs.id}`\r\n                                            }}>Edit</Link>\r\n                                    </td>\r\n                                    <td><Link onClick={() =>{deleteThisJob(jobs.id)}} style={{color:'black'}}>Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2021 JobsZone\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewAdminJobsScreen);","E:\\reactjs\\jobszone\\src\\screens\\ViewAdminInternshipsScreen.js",["230"],"E:\\reactjs\\jobszone\\src\\screens\\ViewAdminJobApplicantScreen.js",["231","232"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, graphqlOperation, Storage } from 'aws-amplify';\r\nimport {listJobApplicants} from '../graphql/queries';\r\n\r\nimport {Link, useParams, withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction ViewAdminJobApplicantsScreen(props){\r\n    const {jobId} =useParams();\r\n    const [jobApplicants,setJobApplicants]=useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n          const getJobApplicant=async()=>{\r\n          const AllApplicants=await API.graphql(\r\n            graphqlOperation(\r\n              listJobApplicants\r\n            )\r\n          )\r\n          setJobApplicants(AllApplicants.data.listJobApplicants.items)\r\n         \r\n          }\r\n        \r\n          getJobApplicant();\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n    \r\n        }\r\n    \r\n      },[]);\r\n      const getResumeUrl=async(resumeFile)=>{\r\n        const resumeUrl=await Storage.get(resumeFile);\r\n        console.log(resumeUrl);\r\n        window.open(resumeUrl, '_blank', 'noopener,noreferrer')\r\n        \r\n      }\r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"admin\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"approveJobs\">View all jobs requests</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminInternship\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllUsers\">View All users</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllCompanies\">View All Companies</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n        <main class=\"admin__main\">\r\n\r\n          <h2 style={{color:'rebeccapurple'}}>All Applicants </h2>\r\n          <p style={{color:'rebeccapurple'}}>For job/internship</p>\r\n          <div class=\"dashboard\">\r\n            <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Job Name</th>\r\n                        <th>Applicant Name</th>\r\n                        <th>College</th>\r\n                        <th>Email</th>\r\n                        <th>Mobile No.</th>\r\n                        <th>Applied Date</th>\r\n                        <th>View Resume</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobApplicants.map(jobApplicants=>\r\n                     \r\n                                <tr>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/job${jobApplicants.job.id}`\r\n                                            }}>{jobApplicants.job.jobName}</Link></td>\r\n                                    <td>{jobApplicants.user.firstName} {jobApplicants.user.lastName}</td>\r\n                                    <td>{jobApplicants.user.collegeName}</td>\r\n                                    <td>{jobApplicants.user.email}</td>\r\n                                    <td>{jobApplicants.user.mobileNo}</td>\r\n                                    <td>{moment(jobApplicants.createdAt).format('ll')}</td>\r\n                                    <td><Link onClick={() =>{getResumeUrl(jobApplicants.user.resumeFile)}} style={{color:'black'}}>View</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2018 Grid Inc.\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewAdminJobApplicantsScreen);","E:\\reactjs\\jobszone\\src\\screens\\ViewJobRequestsScreen.js",["233"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteJob, updateJob } from '../graphql/mutations';\r\n\r\nfunction ViewJobRequestsScreen(props){\r\n\r\n  const [jobs,setJobs]=useState([]);\r\n  useEffect(()=>{\r\n      try{\r\n        const getJobList= async()=>{\r\n        const joblist=await API.graphql(\r\n          graphqlOperation(\r\n            listJobs,{\r\n                filter:{\r\n                  jobType: {contains: \"job\"},\r\n                  jobStatus:{contains:\"created\"}\r\n                }\r\n            }   \r\n        ));\r\n        setJobs(joblist.data.listJobs.items);\r\n        }\r\n      \r\n        getJobList();\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n  \r\n      }\r\n  \r\n    },[]);\r\n\r\n    async function deleteThisJob (jobId){\r\n      await API.graphql(\r\n        graphqlOperation(\r\n          deleteJob,{\r\n            input:{\r\n              id:jobId\r\n            }\r\n          }\r\n        )\r\n      );\r\n      alert(\"Job Deleted Sucessfully\");\r\n      window.location.reload();\r\n    }; \r\n    const changeJobStatus=async(jobId)=>{\r\n        await API.graphql(\r\n          graphqlOperation(\r\n            updateJob,\r\n            {\r\n              input:{\r\n                id:jobId,\r\n                jobStatus:\"active\"\r\n              }\r\n            }\r\n          )\r\n        );\r\n      window.location.reload();\r\n    } \r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"admin\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">View all jobs requests</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminInternship\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">View All users</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminApplicants\">View All Applicants</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n        <main class=\"admin__main\">\r\n        <h2 style={{color:'rebeccapurple'}}>All Job Requests </h2>\r\n          <div class=\"dashboard\">\r\n          <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Job Name</th>\r\n                        <th>Job Type</th>\r\n                        <th>Company Name</th>\r\n                        <th>Job Location</th>\r\n                        <th>Post Date</th>\r\n                        <th>Last Date</th>\r\n                        <th>Approve</th>\r\n                        <th>Delete </th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobs.map(jobs=>\r\n                                <tr>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${jobs.id}`\r\n                                            }}>{jobs.jobName}</Link></td>\r\n                                    <td>{jobs.jobType}</td> \r\n                                    <td>{jobs.companyName}</td>        \r\n                                    <td>{jobs.jobLocation}</td>\r\n                                    <td>{moment(jobs.createdAt).format('ll')}</td>\r\n                                    <td>{moment(jobs.lastDate).format('ll')}</td>\r\n                                    <td><Link onClick={() =>{changeJobStatus(jobs.id)}}   style={{color:'black'}}>Approve</Link>\r\n                                    </td>\r\n                                    <td><Link onClick={() =>{deleteThisJob(jobs.id)}} style={{color:'black'}}>Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2021 JobsZone\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewJobRequestsScreen);","E:\\reactjs\\jobszone\\src\\screens\\ViewAllUsersScreen.js",["234","235","236","237"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs, listUsers} from '../graphql/queries';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteJob, deleteUser } from '../graphql/mutations';\r\n\r\nfunction ViewAllUsersScreen(props){\r\n\r\n  const [users,setUsers]=useState([]);\r\n  useEffect(()=>{\r\n      try{\r\n        const getUserList= async()=>{\r\n        const userlist=await API.graphql(\r\n          graphqlOperation(\r\n            listUsers,{\r\n                filter:{\r\n                  userRole: {contains: \"jobSeeker\"},\r\n                }\r\n            }   \r\n        ));\r\n        setUsers(userlist.data.listUsers.items);\r\n        }\r\n      \r\n        getUserList();\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n  \r\n      }\r\n  \r\n    },[]);\r\n\r\n    async function deleteThisUser (userId){\r\n      await API.graphql(\r\n        graphqlOperation(\r\n          deleteUser,{\r\n            input:{\r\n              id:userId\r\n            }\r\n          }\r\n        )\r\n      );\r\n      alert(\"User Deleted Sucessfully\");\r\n      window.location.reload();\r\n    }; \r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"admin\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"approveJobs\">View all jobs requests</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminInternship\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllUsers\">View All users</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllCompanies\">View All Companies</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n        <main class=\"admin__main\">\r\n        <h2 style={{color:'rebeccapurple'}}>All Jobs </h2>\r\n          <p style={{color:'rebeccapurple'}}>Posted By Companies</p>\r\n          <div class=\"dashboard\">\r\n          <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Name</th>\r\n                        <th>Mobile No</th>\r\n                        <th>Email</th>\r\n                        <th>Address</th>\r\n                        <th>College Name</th>\r\n                        <th>Passing Year</th>\r\n                        <th>Edit Details</th>\r\n                        <th>Delete</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {users.map(users=>\r\n                                <tr>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/job${users.id}`\r\n                                            }}>{users.firstName} {users.lastName}</Link></td>\r\n                                    <td>{users.mobileNo}</td>        \r\n                                    <td>{users.email}</td>\r\n                                    <td>{users.address}</td>\r\n                                    <td>{users.collegeName}</td>\r\n                                    <td>{moment(users.courseCompletion).format('yyyy')}</td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${users.id}`\r\n                                            }}>Edit</Link>\r\n                                    </td>\r\n                                    <td><Link onClick={() =>{deleteThisUser(users.id)}} style={{color:'black'}}>Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2018 Grid Inc.\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewAllUsersScreen);","E:\\reactjs\\jobszone\\src\\screens\\ViewAllCompaniesScreen.js",["238","239","240","241","242"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs, listUsers} from '../graphql/queries';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteJob, deleteUser } from '../graphql/mutations';\r\n\r\nfunction ViewAllCompaniesScreen(props){\r\n\r\n  const [users,setUsers]=useState([]);\r\n  const [admins,setAdmins]=useState([]);\r\n  useEffect(()=>{\r\n      try{\r\n        const getUserList= async()=>{\r\n        const userlist=await API.graphql(\r\n          graphqlOperation(\r\n            listUsers,{\r\n                filter:{\r\n                  userRole: {contains: \"jobProvider\"},\r\n                }\r\n            }   \r\n        ));\r\n        const adminlist=await API.graphql(\r\n            graphqlOperation(\r\n              listUsers,{\r\n                  filter:{\r\n                    userRole: {contains: \"Admin\"},\r\n                  }\r\n              }   \r\n          ));\r\n        setUsers(userlist.data.listUsers.items);\r\n        setAdmins(adminlist.data.listUsers.items)\r\n        }\r\n      \r\n        getUserList();\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n  \r\n      }\r\n  \r\n    },[]);\r\n\r\n    async function deleteThisUser (userId){\r\n      await API.graphql(\r\n        graphqlOperation(\r\n          deleteUser,{\r\n            input:{\r\n              id:userId\r\n            }\r\n          }\r\n        )\r\n      );\r\n      alert(\"User Deleted Sucessfully\");\r\n      window.location.reload();\r\n    }; \r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"admin\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"approveJobs\">View all jobs requests</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminInternship\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllUsers\">View All users</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllCompanies\">View All Companies</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n        <main class=\"admin__main\">\r\n        <h2 style={{color:'rebeccapurple'}}>All Jobs </h2>\r\n          <p style={{color:'rebeccapurple'}}>Posted By Companies</p>\r\n          <div class=\"dashboard\">\r\n          <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Name</th>\r\n                        <th>Company Name</th>\r\n                        <th>Designation</th>\r\n                        <th>Office Address</th>\r\n                        <th>Website</th>\r\n                        <th>Edit Details</th>\r\n                        <th>Delete</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {users.map(users=>\r\n                                <tr>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/job${users.id}`\r\n                                            }}>{users.firstName} {users.lastName}</Link></td>\r\n                                    <td>{users.companyName}</td>\r\n                                    <td>{users.userPost}</td>\r\n                                    <td>{users.officeAddress}</td>\r\n                                    <td>{users.companyWebsite}</td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${users.id}`\r\n                                            }}>Edit</Link>\r\n                                    </td>\r\n                                    <td><Link onClick={() =>{deleteThisUser(users.id)}} style={{color:'black'}}>Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                         {admins.map(admins=>\r\n                                <tr>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/job${admins.id}`\r\n                                            }}>{admins.firstName} {admins.lastName}</Link></td>\r\n                                    <td>{admins.companyName}</td>\r\n                                    <td>{admins.userPost}</td>\r\n                                    <td>{admins.officeAddress}</td>\r\n                                    <td><a style={{color:'black'}} href={admins.companyWebsite}\r\n                                        >{admins.companyWebsite}</a></td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${admins.id}`\r\n                                            }}>Edit</Link>\r\n                                    </td>\r\n                                    <td><Link onClick={() =>{deleteThisUser(admins.id)}} style={{color:'black'}}>Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2018 Grid Inc.\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewAllCompaniesScreen);",{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":26},{"ruleId":"247","severity":1,"message":"251","line":1,"column":28,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"252","line":11,"column":19,"nodeType":"249","messageId":"250","endLine":11,"endColumn":22},{"ruleId":"247","severity":1,"message":"253","line":11,"column":24,"nodeType":"249","messageId":"250","endLine":11,"endColumn":28},{"ruleId":"247","severity":1,"message":"254","line":11,"column":30,"nodeType":"249","messageId":"250","endLine":11,"endColumn":46},{"ruleId":"247","severity":1,"message":"255","line":15,"column":9,"nodeType":"249","messageId":"250","endLine":15,"endColumn":16},{"ruleId":"247","severity":1,"message":"256","line":15,"column":18,"nodeType":"249","messageId":"250","endLine":15,"endColumn":27},{"ruleId":"247","severity":1,"message":"253","line":8,"column":15,"nodeType":"249","messageId":"250","endLine":8,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":303,"column":13,"nodeType":"259","endLine":303,"endColumn":149},{"ruleId":"260","severity":1,"message":"261","line":43,"column":5,"nodeType":"262","endLine":43,"endColumn":7,"suggestions":"263"},{"ruleId":"247","severity":1,"message":"264","line":12,"column":10,"nodeType":"249","messageId":"250","endLine":12,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":56,"column":5,"nodeType":"262","endLine":56,"endColumn":7,"suggestions":"265"},{"ruleId":"247","severity":1,"message":"266","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":20},{"ruleId":"247","severity":1,"message":"267","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":19},{"ruleId":"257","severity":1,"message":"268","line":52,"column":7,"nodeType":"259","endLine":52,"endColumn":34},{"ruleId":"257","severity":1,"message":"268","line":60,"column":13,"nodeType":"259","endLine":60,"endColumn":40},{"ruleId":"257","severity":1,"message":"268","line":57,"column":13,"nodeType":"259","endLine":57,"endColumn":40},{"ruleId":"260","severity":1,"message":"261","line":36,"column":9,"nodeType":"262","endLine":36,"endColumn":11,"suggestions":"269"},{"ruleId":"257","severity":1,"message":"268","line":50,"column":13,"nodeType":"259","endLine":50,"endColumn":40},{"ruleId":"260","severity":1,"message":"270","line":61,"column":5,"nodeType":"262","endLine":61,"endColumn":7,"suggestions":"271"},{"ruleId":"247","severity":1,"message":"266","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":20},{"ruleId":"247","severity":1,"message":"267","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":19},{"ruleId":"257","severity":1,"message":"268","line":47,"column":7,"nodeType":"259","endLine":47,"endColumn":34},{"ruleId":"247","severity":1,"message":"253","line":4,"column":15,"nodeType":"249","messageId":"250","endLine":4,"endColumn":19},{"ruleId":"257","severity":1,"message":"268","line":90,"column":13,"nodeType":"259","endLine":90,"endColumn":40},{"ruleId":"257","severity":1,"message":"268","line":87,"column":13,"nodeType":"259","endLine":87,"endColumn":40},{"ruleId":"247","severity":1,"message":"272","line":11,"column":12,"nodeType":"249","messageId":"250","endLine":11,"endColumn":17},{"ruleId":"257","severity":1,"message":"268","line":46,"column":13,"nodeType":"259","endLine":46,"endColumn":40},{"ruleId":"257","severity":1,"message":"268","line":71,"column":13,"nodeType":"259","endLine":71,"endColumn":40},{"ruleId":"247","severity":1,"message":"253","line":4,"column":15,"nodeType":"249","messageId":"250","endLine":4,"endColumn":19},{"ruleId":"247","severity":1,"message":"273","line":5,"column":9,"nodeType":"249","messageId":"250","endLine":5,"endColumn":17},{"ruleId":"247","severity":1,"message":"274","line":8,"column":10,"nodeType":"249","messageId":"250","endLine":8,"endColumn":19},{"ruleId":"257","severity":1,"message":"268","line":56,"column":13,"nodeType":"259","endLine":56,"endColumn":40},{"ruleId":"247","severity":1,"message":"253","line":4,"column":15,"nodeType":"249","messageId":"250","endLine":4,"endColumn":19},{"ruleId":"247","severity":1,"message":"273","line":5,"column":9,"nodeType":"249","messageId":"250","endLine":5,"endColumn":17},{"ruleId":"247","severity":1,"message":"275","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":14},{"ruleId":"247","severity":1,"message":"274","line":8,"column":10,"nodeType":"249","messageId":"250","endLine":8,"endColumn":19},{"ruleId":"257","severity":1,"message":"268","line":66,"column":13,"nodeType":"259","endLine":66,"endColumn":40},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'API' is defined but never used.","'Auth' is defined but never used.","'graphqlOperation' is defined but never used.","'getUser' is defined but never used.","'listUsers' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'jobId'. Either include it or remove the dependency array.","ArrayExpression",["278"],"'isApplied' is assigned a value but never used.",["279"],"'withRouter' is defined but never used.","'createUser' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["280"],"React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array.",["281"],"'jobId' is assigned a value but never used.","'listJobs' is defined but never used.","'deleteJob' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},{"desc":"282","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [jobId]",{"range":"288","text":"289"},{"range":"290","text":"289"},{"range":"291","text":"289"},"Update the dependencies array to be: [searchTerm]",{"range":"292","text":"293"},[1210,1212],"[jobId]",[1639,1641],[1020,1022],[1861,1863],"[searchTerm]"]