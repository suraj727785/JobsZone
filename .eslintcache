[{"E:\\reactjs\\jobszone\\src\\index.js":"1","E:\\reactjs\\jobszone\\src\\App.js":"2","E:\\reactjs\\jobszone\\src\\reportWebVitals.js":"3","E:\\reactjs\\jobszone\\src\\components\\Search.js":"4","E:\\reactjs\\jobszone\\src\\screens\\CreateJobScreen.js":"5","E:\\reactjs\\jobszone\\src\\screens\\InternshipDetailsScreen.js":"6","E:\\reactjs\\jobszone\\src\\screens\\CreateInternshipScreen.js":"7","E:\\reactjs\\jobszone\\src\\screens\\JobDetailsScreen.js":"8","E:\\reactjs\\jobszone\\src\\screens\\ApplyJobScreen.js":"9","E:\\reactjs\\jobszone\\src\\screens\\JobScreen.js":"10","E:\\reactjs\\jobszone\\src\\components\\Footer.js":"11","E:\\reactjs\\jobszone\\src\\components\\CreateJobForm.js":"12","E:\\reactjs\\jobszone\\src\\components\\InternshipDetails.js":"13","E:\\reactjs\\jobszone\\src\\components\\JobCard.js":"14","E:\\reactjs\\jobszone\\src\\components\\CreateInternshipForm.js":"15","E:\\reactjs\\jobszone\\src\\components\\ApplyJobForm.js":"16","E:\\reactjs\\jobszone\\src\\components\\Header.js":"17","E:\\reactjs\\jobszone\\src\\components\\JobDetails.js":"18","E:\\reactjs\\jobszone\\src\\aws-exports.js":"19","E:\\reactjs\\jobszone\\src\\screens\\ProfileScreen.js":"20","E:\\reactjs\\jobszone\\src\\components\\ViewProfile.js":"21","E:\\reactjs\\jobszone\\src\\graphql\\queries.js":"22","E:\\reactjs\\jobszone\\src\\screens\\FirstRegisterScreen.js":"23","E:\\reactjs\\jobszone\\src\\components\\FirstRegister.js":"24","E:\\reactjs\\jobszone\\src\\graphql\\mutations.js":"25","E:\\reactjs\\jobszone\\src\\screens\\EditProfileScreen.js":"26","E:\\reactjs\\jobszone\\src\\components\\EditProfile.js":"27","E:\\reactjs\\jobszone\\src\\mutations.js":"28","E:\\reactjs\\jobszone\\src\\screens\\InternshipScreen.js":"29","E:\\reactjs\\jobszone\\src\\components\\InternshipCard.js":"30","E:\\reactjs\\jobszone\\src\\screens\\CompanyScreen.js":"31","E:\\reactjs\\jobszone\\src\\screens\\ViewAllJobsScreen.js":"32","E:\\reactjs\\jobszone\\src\\screens\\ViewAllInternshipsScreen.js":"33","E:\\reactjs\\jobszone\\src\\screens\\ViewJobApplicantsScreen.js":"34","E:\\reactjs\\jobszone\\src\\components\\MyAppications.js":"35","E:\\reactjs\\jobszone\\src\\screens\\MyAppicationsScreen.js":"36","E:\\reactjs\\jobszone\\src\\screens\\JobSearchScreen.js":"37","E:\\reactjs\\jobszone\\src\\components\\CompanyRegister.js":"38","E:\\reactjs\\jobszone\\src\\components\\EditCompanyProfile.js":"39"},{"size":541,"mtime":1612093271168,"results":"40","hashOfConfig":"41"},{"size":2910,"mtime":1612701089052,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":798,"mtime":1612680000804,"results":"44","hashOfConfig":"41"},{"size":437,"mtime":1611913420707,"results":"45","hashOfConfig":"41"},{"size":402,"mtime":1611899209050,"results":"46","hashOfConfig":"41"},{"size":473,"mtime":1611937648474,"results":"47","hashOfConfig":"41"},{"size":367,"mtime":1611893777991,"results":"48","hashOfConfig":"41"},{"size":433,"mtime":1611940028988,"results":"49","hashOfConfig":"41"},{"size":1579,"mtime":1612701355809,"results":"50","hashOfConfig":"41"},{"size":1798,"mtime":1612418025519,"results":"51","hashOfConfig":"41"},{"size":10661,"mtime":1612547776983,"results":"52","hashOfConfig":"41"},{"size":3685,"mtime":1612500358737,"results":"53","hashOfConfig":"41"},{"size":1948,"mtime":1612460657241,"results":"54","hashOfConfig":"41"},{"size":12734,"mtime":1612611093655,"results":"55","hashOfConfig":"41"},{"size":7791,"mtime":1612640376623,"results":"56","hashOfConfig":"41"},{"size":2892,"mtime":1612715300902,"results":"57","hashOfConfig":"41"},{"size":3988,"mtime":1612677705886,"results":"58","hashOfConfig":"41"},{"size":839,"mtime":1612715746703,"results":"59","hashOfConfig":"41"},{"size":441,"mtime":1612154860050,"results":"60","hashOfConfig":"41"},{"size":2828,"mtime":1612714927926,"results":"61","hashOfConfig":"41"},{"size":15696,"mtime":1612715741137,"results":"62","hashOfConfig":"41"},{"size":1831,"mtime":1612703961195,"results":"63","hashOfConfig":"41"},{"size":5862,"mtime":1612713652705,"results":"64","hashOfConfig":"41"},{"size":21238,"mtime":1612715741370,"results":"65","hashOfConfig":"41"},{"size":1291,"mtime":1612714875470,"results":"66","hashOfConfig":"41"},{"size":6669,"mtime":1612715015641,"results":"67","hashOfConfig":"41"},{"size":474,"mtime":1612373152660,"results":"68","hashOfConfig":"41"},{"size":1706,"mtime":1612540859825,"results":"69","hashOfConfig":"41"},{"size":1965,"mtime":1612466102500,"results":"70","hashOfConfig":"41"},{"size":3668,"mtime":1612704059498,"results":"71","hashOfConfig":"41"},{"size":4946,"mtime":1612704082012,"results":"72","hashOfConfig":"41"},{"size":4659,"mtime":1612704071955,"results":"73","hashOfConfig":"41"},{"size":4171,"mtime":1612704090332,"results":"74","hashOfConfig":"41"},{"size":2764,"mtime":1612676850670,"results":"75","hashOfConfig":"41"},{"size":449,"mtime":1612675013255,"results":"76","hashOfConfig":"41"},{"size":3445,"mtime":1612683205339,"results":"77","hashOfConfig":"41"},{"size":5593,"mtime":1612703728135,"results":"78","hashOfConfig":"41"},{"size":6277,"mtime":1612714982420,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"w7g81v",{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\reactjs\\jobszone\\src\\index.js",[],["170","171"],"E:\\reactjs\\jobszone\\src\\App.js",["172","173","174","175","176","177","178"],"import React, { useEffect, useState } from 'react';\r\nimport {Route,Switch} from 'react-router-dom';\r\nimport Search from './components/Search';\r\nimport CreateJobScreen from './screens/CreateJobScreen';\r\nimport CreateInternshipScreen from './screens/CreateInternshipScreen';\r\nimport InternshipDetailsScreen from './screens/InternshipDetailsScreen';\r\nimport JobDetailsScreen from './screens/JobDetailsScreen';\r\nimport JobScreen from './screens/JobScreen';\r\nimport ApplyJobScreen from './screens/ApplyJobScreen';\r\nimport { withAuthenticator} from '@aws-amplify/ui-react';\r\nimport Amplify, { API, Auth, graphqlOperation } from \"aws-amplify\";\r\nimport awsExports from \"./aws-exports\";\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport FirstRegisterScreen from './screens/FirstRegisterScreen';\r\nimport {getUser, listUsers} from './graphql/queries';\r\nimport EditProfileScreen from './screens/EditProfileScreen';\r\nimport InternshipScreen from './screens/InternshipScreen';\r\nimport CompanyScreen from './screens/CompanyScreen';\r\nimport ViewAllJobsScreen from './screens/ViewAllJobsScreen';\r\nimport ViewAllInternshipsScreen from './screens/ViewAllInternshipsScreen';\r\nimport ViewJobApplicantsScreen from './screens/ViewJobApplicantsScreen';\r\nimport MyApplicationsScreen from './screens/MyAppicationsScreen';\r\nimport JobSearchScreen from './screens/JobSearchScreen';\r\nAmplify.configure(awsExports);\r\n\r\nfunction App(){\r\n\r\n    return(\r\n        <main>\r\n            <Switch>\r\n                <Route path=\"/\" component={FirstRegisterScreen} exact />\r\n                <Route path=\"/viewAllJobs\" component={JobScreen} />\r\n                <Route path=\"/internship\" component={InternshipScreen} />\r\n                <Route path=\"/job:jobId\" component={JobDetailsScreen} />\r\n                <Route path=\"/internship:jobId\" component={InternshipDetailsScreen} />\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/createJob\" component={CreateJobScreen} />\r\n                <Route path=\"/createInternship\" component={CreateInternshipScreen} />\r\n                <Route path=\"/apply:jobId\" component={ApplyJobScreen} />\r\n                <Route path=\"/profile\" component={ProfileScreen} />\r\n                <Route path=\"/editProfile\" component={EditProfileScreen} />\r\n                <Route path=\"/company\" component={CompanyScreen} />\r\n                <Route path=\"/viewAllJobs\" component={ViewAllJobsScreen} />\r\n                <Route path=\"/viewAllInternships\" component={ViewAllInternshipsScreen} />\r\n                <Route path=\"/viewJobApplicants:jobId\" component={ViewJobApplicantsScreen} />\r\n                <Route path=\"/myApplication\" component={MyApplicationsScreen} />\r\n                <Route path=\"/searchJob:searchTerm\" component={JobSearchScreen}/>\r\n                \r\n            </Switch>\r\n        </main>\r\n        \r\n\r\n    );\r\n}\r\n\r\nexport default withAuthenticator(App);","E:\\reactjs\\jobszone\\src\\reportWebVitals.js",[],"E:\\reactjs\\jobszone\\src\\components\\Search.js",[],"E:\\reactjs\\jobszone\\src\\screens\\CreateJobScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\InternshipDetailsScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\CreateInternshipScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\JobDetailsScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\ApplyJobScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\JobScreen.js",["179"],"import React, { useEffect, useState } from 'react';\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport JobCard from \"../components/JobCard\";\nimport { useMediaQuery } from 'react-responsive';\nimport './screensStyle.css';\nimport Search from '../components/Search';\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\nimport {listJobs} from '../graphql/queries';\n\n\nfunction JobScreen() {\n  const isTablet = useMediaQuery({ query: '(max-width: 1100px)' })\n  const isMobile = useMediaQuery({\n    query: '(max-width: 600px)'\n  })\n  const [jobs,setJobs]=useState([]);\n  useEffect(()=>{\n    try{\n      const getJobList= async()=>{\n      const joblist=await API.graphql(\n        graphqlOperation(\n          listJobs,{\n            filter:{\n              jobType: {contains: \"job\"}\n            }\n        }    \n      ))\n      setJobs(joblist.data.listJobs.items);\n      }\n    \n      getJobList();\n    }\n    catch{\n\n    }\n\n  },[]);\n  return (\n    <div >\n     <Header />\n     <div className=\"LargeSearchContainer\" style={{marginTop:100,marginLeft:400}} >\n     <Search />\n     </div>\n     <div className={ (isMobile) ? \"JobsSmall\" : ((isTablet) ? \"JobsMedium\" : \"JobsLarge\")} >\n     {\n       jobs.map(jobs => <JobCard \n        jobID={jobs.id}\n        companyName={jobs.companyName}\n        lastDate={jobs.lastDate}\n        role={jobs.jobName}\n        salary={jobs.salary}\n        experience={jobs.experience}\n        location={jobs.jobLocation}\n        />\n       )\n     }\n     </div>\n     <Footer />\n    </div>\n  );\n}\n\nexport default JobScreen;\n","E:\\reactjs\\jobszone\\src\\components\\Footer.js",[],"E:\\reactjs\\jobszone\\src\\components\\CreateJobForm.js",["180"],"import { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React,{useEffect, useState} from 'react';\r\nimport { createJob,createJobCretaria,createJobDescription,createJobSkill,updateJobCount } from '../graphql/mutations';\r\nimport { getJobCount } from '../graphql/queries';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction CreateJobForm(props){\r\n\r\n  const [userId,setUserId]=useState('');\r\n  const [discriptionFields, setDiscriptionFields] = useState([{ value: '' }]);\r\n  const [skillsFields, setSkillsFields] = useState([{ value: '' }]);\r\n  const [criteriaFields, setCriteriaFields] = useState([{ value: '' }]);\r\n  const [jobDetails,updateJobDetils]=useState({\r\n    jobTitle:'',jobName:'',companyName:'',companyWebsite:'',aboutCompany:'',\r\n    experience:'',salary:'',jobLocation:'',lastDate:''\r\n  });\r\n  const[jobCount,setJobCount]=useState(1);\r\n  useEffect(()=>{\r\n    const fetchJobCount= async()=>{\r\n      const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n      setUserId(userInfo.attributes.sub);\r\n      const jobCountData = await API.graphql(\r\n        graphqlOperation(\r\n          getJobCount,{\r\n            id:'jobCount'\r\n          }\r\n        )\r\n      );\r\n     setJobCount(jobCountData.data.getJobCount.count+1);\r\n    }\r\n\r\n     fetchJobCount();\r\n\r\n  },[]);\r\n\r\n  function handleDiscriptionChange(i, event) {\r\n    const values = [...discriptionFields];\r\n    values[i].value = event.target.value;\r\n    setDiscriptionFields(values);\r\n  }\r\n\r\n  function handleDiscriptionAdd() {\r\n    const values = [...discriptionFields];\r\n    values.push({ value: null });\r\n    setDiscriptionFields(values);\r\n  }\r\n\r\n  function handleDiscriptionRemove(i) {\r\n    const values = [...discriptionFields];\r\n    values.splice(i, 1);\r\n    setDiscriptionFields(values);\r\n  }\r\n  function handleSkillsChange(i, event) {\r\n    const values = [...skillsFields];\r\n    values[i].value = event.target.value;\r\n    setSkillsFields(values);\r\n  }\r\n\r\n  function handleSkillsAdd() {\r\n    const values = [...skillsFields];\r\n    values.push({ value: null });\r\n    setSkillsFields(values);\r\n  }\r\n\r\n  function handleSkillsRemove(i) {\r\n    const values = [...skillsFields];\r\n    values.splice(i, 1);\r\n    setSkillsFields(values);\r\n  }\r\n  function handleCriteriaChange(i, event) {\r\n    const values = [...criteriaFields];\r\n    values[i].value = event.target.value;\r\n    setCriteriaFields(values);\r\n  }\r\n\r\n  function handleCriteriaAdd() {\r\n    const values = [...criteriaFields];\r\n    values.push({ value: null });\r\n    setCriteriaFields(values);\r\n  }\r\n\r\n  function handleCriteriaRemove(i) {\r\n    const values = [...criteriaFields];\r\n    values.splice(i, 1);\r\n    setCriteriaFields(values);\r\n  }\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    updateJobDetils({\r\n      ...jobDetails,\r\n      [evt.target.name]: value\r\n    });\r\n  }\r\n   const createNewJob=async()=>{\r\n    \r\n     await API.graphql(\r\n       graphqlOperation(\r\n         updateJobCount,{\r\n           input:{\r\n             id:'jobCount',\r\n             count:jobCount\r\n           }\r\n\r\n         }\r\n       )\r\n     );\r\n     await API.graphql(\r\n       graphqlOperation(\r\n         createJob,{\r\n           input:{\r\n            id:`job${jobCount}`,\r\n            jobName:jobDetails.jobName,\r\n            jobType:\"job\",\r\n            jobUserId:userId,\r\n            jobTitle:jobDetails.jobTitle,\r\n            companyName:jobDetails.companyName,\r\n            comapanyWebsite:jobDetails.companyWebsite,\r\n            aboutCompany:jobDetails.aboutCompany,\r\n            experience:jobDetails.experience,\r\n            salary:jobDetails.salary,\r\n            jobLocation:jobDetails.jobLocation,\r\n            lastDate:jobDetails.lastDate\r\n           }\r\n         }\r\n       )\r\n     );\r\n     let lDis =discriptionFields.length;\r\n     let iDis=0;\r\n     while(iDis<lDis){\r\n     await API.graphql(\r\n       graphqlOperation(\r\n         createJobDescription,{\r\n           input:{\r\n             content:discriptionFields[iDis].value,\r\n             jobID:`job${jobCount}`\r\n           }\r\n         }\r\n       )\r\n     );\r\n     iDis=iDis+1;\r\n        }\r\n        let lSkil=skillsFields.length;\r\n        let iSkill=0\r\n        while(iSkill<lSkil){\r\n     await API.graphql(\r\n      graphqlOperation(\r\n        createJobSkill,{\r\n          input:{\r\n            content:skillsFields[iSkill].value,\r\n            jobID:`job${jobCount}`\r\n          }\r\n        }\r\n      )\r\n    );\r\n    iSkill=iSkill+1;\r\n      }\r\n      let lCri=criteriaFields.length;\r\n      let iCri=0;\r\n      while(iCri<lCri){\r\n    await API.graphql(\r\n      graphqlOperation(\r\n        createJobCretaria,{\r\n          input:{\r\n            content:criteriaFields[iCri].value,\r\n            jobID:`job${jobCount}`\r\n          }\r\n        }\r\n      )\r\n    );\r\n    iCri=iCri+1\r\n      }\r\n      alert(\"Sucessfully created a job \");\r\n      props.history.push('/');\r\n\r\n        }\r\n\r\n    return (\r\n\r\n\r\n    <div className=\"formContainer\">\r\n    <form >\r\n    <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label htmlFor=\"job-title\">Job Title</label>\r\n      <input type=\"text\" value={jobDetails.jobTitle} onChange={handleChange} className=\"form-control\" name=\"jobTitle\" id=\"job-title\" placeholder=\"Enter Job Title\" />\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"job-name\">Job Name</label>\r\n      <input type=\"text\" value={jobDetails.jobName} onChange={handleChange} className=\"form-control\" name=\"jobName\" id=\"job-name\" placeholder=\"Enter Job Name\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"company-name\">Company Name</label>\r\n      <input type=\"text\" value={jobDetails.companyName} onChange={handleChange} className=\"form-control\" name=\"companyName\" id=\"job-title\" placeholder=\"Enter Your Company Name\" />\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"company-website\">Company Website</label>\r\n      <input type=\"text\" value={jobDetails.companyWebsite} onChange={handleChange} className=\"form-control\" name=\"companyWebsite\" id=\"job-website\" placeholder=\"Enter Company Official Website\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"about-company\">About Company</label>\r\n    <textarea className=\"form-control\" value={jobDetails.aboutCompany} onChange={handleChange} id=\"about-company\" name=\"aboutCompany\" rows=\"3\"></textarea>\r\n  </div>\r\n  <div className=\"form-row\">\r\n  <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"experience\">Experience Required</label>\r\n    <input type=\"text\" id=\"experience\" value={jobDetails.experience} onChange={handleChange}  name=\"experience\"className=\"form-control\" placeholder=\"Enter Experience Required For Job (eg:- 0-1years)\" />\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n      <label htmlFor=\"salary\">Salary</label>\r\n      <input type=\"text\" value={jobDetails.salary} onChange={handleChange} className=\"form-control\" name=\"salary\" id=\"salary\" placeholder=\"Enter Salary Offered (eg:- 3 LPA )\" />\r\n    </div>   \r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"job-location\">Job Loaction</label>\r\n      <input type=\"text\" value={jobDetails.jobLocation} onChange={handleChange} className=\"form-control\" name=\"jobLocation\" id=\"job-location\" placeholder=\"Enter Job Location (for multiple enter Bengluru/Pune )\" />\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"last-date\">Last Date To Apply</label>\r\n      <input type=\"date\" value={jobDetails.lastDate} onChange={handleChange} className=\"form-control\" name=\"lastDate\" id=\"lastDate\"  />\r\n    </div>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"job-description\">Job Description (add multiple lines) </label>\r\n    <button className=\"btn\" style={{marginLeft:30}} type=\"button\" onClick={() => handleDiscriptionAdd()}>\r\n       Add more field\r\n      </button>\r\n\r\n      {discriptionFields.map((field, idx) => {\r\n        return (\r\n          <div key={`${field}-${idx}`}>\r\n            <input\r\n              style={{marginTop:10,marginBottom:5}}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={field.value}\r\n              name=\"jobDescription\"\r\n              placeholder=\"Describe Job\"\r\n              onChange={e => handleDiscriptionChange(idx, e)}\r\n            />\r\n            <button className=\"btn\" type=\"button\" onClick={() => handleDiscriptionRemove(idx)}>\r\n             Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"desired-skills\">Desired Skills (add multiple lines) </label>\r\n    <button className=\"btn\" style={{marginLeft:30}} type=\"button\" onClick={() => handleSkillsAdd()}>\r\n       Add more field\r\n      </button>\r\n\r\n      {skillsFields.map((field, idx) => {\r\n        return (\r\n          <div key={`${field}-${idx}`}>\r\n            <input\r\n              style={{marginTop:10,marginBottom:5}}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={field.value}\r\n              name=\"desiredSkills\"\r\n              placeholder=\"Add desired skills required for Job\"\r\n              onChange={e => handleSkillsChange(idx, e)}\r\n            />\r\n            <button className=\"btn\" type=\"button\" onClick={() => handleSkillsRemove(idx)}>\r\n             Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"criteria\">Add Criteria (add multiple lines) </label>\r\n    <button className=\"btn\" style={{marginLeft:30}} type=\"button\" onClick={() => handleCriteriaAdd()}>\r\n       Add more field\r\n      </button>\r\n\r\n      {criteriaFields.map((field, idx) => {\r\n        return (\r\n          <div key={`${field}-${idx}`}>\r\n            <input\r\n              style={{marginTop:10,marginBottom:5}}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={field.value}\r\n              name=\"criteria\"\r\n              placeholder=\"Enter criteria required for job\"\r\n              onChange={e => handleCriteriaChange(idx, e)}\r\n            />\r\n            <button className=\"btn\" type=\"button\" onClick={() => handleCriteriaRemove(idx)}>\r\n             Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n  </div>\r\n  <div className=\"text-center submitButton\">\r\n            <a onClick={createNewJob} style={{height:50,width:120,fontFamily:'sans-serif'}} name=\"addJob\" type=\"button\" className=\"btn btn-primary\">Add Job</a>\r\n          </div>\r\n</form>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\nexport default withRouter(CreateJobForm);","E:\\reactjs\\jobszone\\src\\components\\InternshipDetails.js",["181"],"import { API, graphqlOperation } from 'aws-amplify';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getJob } from '../graphql/queries';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nfunction InternshipDetails(){\r\n    let { jobId } = useParams();\r\n  const [jobDetails,setJobDetails]=useState([]);\r\n  const [jobDescription,setJobDescription]=useState([]);\r\n  const [desiredSkill,setDesiredSkill]=useState([]);\r\n  const [criteria,setCriteria]=useState([]);\r\n  const [perks,setPerks]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobDetails=async()=>{\r\n        const jobData=await API.graphql(\r\n          graphqlOperation(\r\n            getJob,{\r\n            id:jobId\r\n            }\r\n          )\r\n        );\r\n        \r\n      setJobDetails(jobData.data.getJob);\r\n      setJobDescription(jobData.data.getJob.jobDescription.items);\r\n      setDesiredSkill(jobData.data.getJob.jobSkills.items);\r\n      setCriteria(jobData.data.getJob.jobCretaria.items);\r\n      setPerks(jobData.data.getJob.perks.items);\r\n      \r\n\r\n      }\r\n\r\n      getJobDetails();\r\n\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n\r\n  },[]);\r\n    return (\r\n        <div className=\"jobContainer\">\r\n            <h1>{jobDetails.jobTitle}</h1>\r\n            <h4>{jobDetails.jobName}</h4>\r\n            <p>{jobDetails.companyName} <a href={`${jobDetails.comapanyWebsite}`}><FiExternalLink size={18}/></a></p>\r\n            <ul className=\"jobTopList\" >\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Stipend</li>\r\n                        <li><b>{jobDetails.salary}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Duration</li>\r\n                        <li><b>{jobDetails.duration}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Job Location</li>\r\n                        <li><b>{jobDetails.jobLocation}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Apply By</li>\r\n                        <li><b>{moment(jobDetails.lastDate).format('ll')}</b></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <h4 style={{marginTop:30}}>About Company<a href={`${jobDetails.comapanyWebsite}`}><FiExternalLink size={22}/></a></h4>\r\n            <p style={{marginTop:15}}>{jobDetails.aboutCompany}</p>\r\n            <h5>Job Description</h5>\r\n            <ul>\r\n                {jobDescription.map(jobDescription => <li>{jobDescription.content}</li>)}\r\n            </ul>\r\n            <h5>Desired Skills</h5>\r\n            <ul>\r\n            {desiredSkill.map(desiredSkill => <li>{desiredSkill.content}</li>)}\r\n            </ul>\r\n            <h5>Applying Critaria</h5>\r\n            <ul>\r\n            {criteria.map(criteria => <li>{criteria.content}</li>)}    \r\n            </ul>\r\n          <h5>Perks</h5>\r\n          <ul className=\"perks\">\r\n            {perks.map(perks => <li>{perks.content}</li>)}\r\n          </ul>\r\n          <h5>No of Position.</h5>\r\n          <p>{jobDetails.noOfPosition}</p>\r\n          <div className=\"text-center submitButton\">\r\n          <a href={`apply${jobId}`} style={{height:50,width:120,fontFamily:'sans-serif',fontSize:18,color:'white'}}  className=\"btn btn-primary\">Apply Now</a>\r\n          </div>\r\n              \r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default InternshipDetails;","E:\\reactjs\\jobszone\\src\\components\\JobCard.js",[],"E:\\reactjs\\jobszone\\src\\components\\CreateInternshipForm.js",[],"E:\\reactjs\\jobszone\\src\\components\\ApplyJobForm.js",[],"E:\\reactjs\\jobszone\\src\\components\\Header.js",[],"E:\\reactjs\\jobszone\\src\\components\\JobDetails.js",["182"],"\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getJob, listJobApplicants } from '../graphql/queries';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction JobDetails(props){\r\n  let { jobId } = useParams();\r\n  const [isApplied,setIsApplied]=useState(false);\r\n  const [jobDetails,setJobDetails]=useState([]);\r\n  const [jobDescription,setJobDescription]=useState([]);\r\n  const [desiredSkill,setDesiredSkill]=useState([]);\r\n  const [criteria,setCriteria]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobDetails=async()=>{\r\n        const jobData=await API.graphql(\r\n          graphqlOperation(\r\n            getJob,{\r\n            id:jobId\r\n            }\r\n          )\r\n        );\r\n        const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        const jobApplicants= await API.graphql(\r\n          graphqlOperation(\r\n            listJobApplicants,{\r\n              filter:{\r\n                userID: {contains: userInfo.attributes.sub},\r\n                jobID: {contains: jobId}\r\n              }\r\n            }\r\n          )\r\n        );\r\n        if(jobApplicants){\r\n          setIsApplied(true);\r\n        }\r\n        \r\n      setJobDetails(jobData.data.getJob);\r\n      setJobDescription(jobData.data.getJob.jobDescription.items);\r\n      setDesiredSkill(jobData.data.getJob.jobSkills.items);\r\n      setCriteria(jobData.data.getJob.jobCretaria.items);\r\n      \r\n\r\n      }\r\n\r\n      getJobDetails();\r\n\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n\r\n  },[]);\r\n     return (\r\n        <div>\r\n        <div className=\"jobContainer\">\r\n            <h1>{jobDetails.jobTitle}</h1>\r\n            <h4>{jobDetails.jobName}</h4>\r\n            <p>{jobDetails.companyName} <a href={`${jobDetails.comapanyWebsite}`}><FiExternalLink size={18}/></a></p>\r\n            <ul className=\"jobTopList\" >\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Salary</li>\r\n                        <li><b>{jobDetails.salary}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Experience</li>\r\n                        <li><b>{jobDetails.experience}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Job Location</li>\r\n                        <li><b>{jobDetails.jobLocation}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Apply By</li>\r\n                        <li><b>{moment(jobDetails.lastDate).format('ll')}</b></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <h4 style={{marginTop:30}}>About Company<a href={`${jobDetails.comapanyWebsite}`}><FiExternalLink size={22}/></a></h4>\r\n            <p style={{marginTop:15}}>{jobDetails.aboutCompany}</p>\r\n            <h5>Job Description</h5>\r\n            <ul>\r\n                {jobDescription.map(jobDescription => <li>{jobDescription.content}</li>)}\r\n            </ul>\r\n            <h5>Desired Skills</h5>\r\n            <ul>\r\n            {desiredSkill.map(desiredSkill => <li>{desiredSkill.content}</li>)}\r\n            </ul>\r\n            <h5>Applying Critaria</h5>\r\n            <ul>\r\n            {criteria.map(criteria => <li>{criteria.content}</li>)}\r\n                \r\n            </ul>\r\n            <div className=\"text-center submitButton\">\r\n            {isApplied?<h3 style={{borderRadius:50,color:'grey'}}>Already Applied</h3>:<a href={`apply${jobId}`} style={{height:50,width:120,fontFamily:'sans-serif',fontSize:18,color:'white'}}  className=\"btn btn-primary\">Apply Now</a>}\r\n          </div>\r\n        </div>\r\n    </div>   \r\n\r\n    );\r\n}\r\n\r\nexport default JobDetails;","E:\\reactjs\\jobszone\\src\\aws-exports.js",[],"E:\\reactjs\\jobszone\\src\\screens\\ProfileScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\ViewProfile.js",[],"E:\\reactjs\\jobszone\\src\\graphql\\queries.js",[],"E:\\reactjs\\jobszone\\src\\screens\\FirstRegisterScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\FirstRegister.js",["183"],"E:\\reactjs\\jobszone\\src\\graphql\\mutations.js",[],"E:\\reactjs\\jobszone\\src\\screens\\EditProfileScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\EditProfile.js",["184"],"E:\\reactjs\\jobszone\\src\\mutations.js",[],"E:\\reactjs\\jobszone\\src\\screens\\InternshipScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\InternshipCard.js",[],"E:\\reactjs\\jobszone\\src\\screens\\CompanyScreen.js",["185","186"],"import React, { useState,useEffect } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, Auth, graphqlOperation, Storage } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\n\r\nfunction CompanyScreen(){\r\n  const [jobs,setJobs]=useState([]);\r\n  const [internships,setInternships]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobList= async()=>{\r\n      const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n      const jobList=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n              filter:{\r\n                jobType: {contains: \"job\"},\r\n                jobUserId: {contains: userInfo.attributes.sub}\r\n              }\r\n          }   \r\n      ));\r\n      const internshipList=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n              filter:{\r\n                jobType: {contains: \"internship\"},\r\n                jobUserId: {contains: userInfo.attributes.sub}\r\n              }\r\n          }   \r\n      ));\r\n      setJobs(jobList.data.listJobs.items);\r\n      setInternships(internshipList.data.listJobs.items);\r\n      }\r\n    \r\n      getJobList();\r\n    }\r\n    catch(e){\r\n      console.log(e)\r\n\r\n    }\r\n\r\n  },[]);\r\n    return (\r\n        <div class=\"admin\">\r\n  <header class=\"admin__header\">\r\n    <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n    <div class=\"toolbar\">\r\n      <h3 style={{color:'white'}}>.</h3>\r\n      <a href=\"#\" class=\"logout\">\r\n        Log Out\r\n      </a>\r\n    </div>\r\n  </header>\r\n  <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"company\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllInternships\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n  <main class=\"admin__main\">\r\n    <h2 style={{color:'rebeccapurple'}}>Dashboard</h2>\r\n    <div class=\"dashboard\">\r\n      <div class=\"dashboard__item\">\r\n        <div class=\"admincard\">\r\n          <h4>Total Jobs:</h4>\r\n        <h1 style={{fontSize:76,color:'rebeccapurple'}}>{jobs.length} Jobs</h1>\r\n        <a href=\"viewAllJobs\">\r\n                <div class=\"panel-footer\">\r\n                    <span class=\"pull-left\">View All Jobs</span>\r\n                    <span class=\"pull-right\"><i class=\"fa fa-arrow-circle-right\"></i></span>\r\n                    <div class=\"clearfix\"></div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"dashboard__item\">\r\n        <div class=\"admincard\">\r\n          <h4>Total Internships:</h4>\r\n        <h1 style={{fontSize:76,color:'rebeccapurple'}}>{internships.length} Internships</h1>\r\n        <a href=\"viewAllInternships\">\r\n                <div class=\"panel-footer\">\r\n                    <span class=\"pull-left\">View All Internship</span>\r\n                    <span class=\"pull-right\"><i class=\"fa fa-arrow-circle-right\"></i></span>\r\n                    <div class=\"clearfix\"></div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n      </div>\r\n      <div>\r\n      </div>\r\n\r\n    </div>\r\n  </main>\r\n  <footer class=\"admin__footer\">\r\n    <span>\r\n      &copy; 2018 Grid Inc.\r\n    </span>\r\n  </footer>\r\n</div>\r\n   );\r\n}\r\n\r\nexport default CompanyScreen;","E:\\reactjs\\jobszone\\src\\screens\\ViewAllJobsScreen.js",["187"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteJob } from '../graphql/mutations';\r\n\r\nfunction ViewAllJobsScreen(props){\r\n\r\n  const [jobs,setJobs]=useState([]);\r\n  useEffect(()=>{\r\n      try{\r\n        const getJobList= async()=>{\r\n        const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        const joblist=await API.graphql(\r\n          graphqlOperation(\r\n            listJobs,{\r\n                filter:{\r\n                  jobType: {contains: \"job\"},\r\n                  jobUserId: {contains: userInfo.attributes.sub}\r\n                }\r\n            }   \r\n        ));\r\n        setJobs(joblist.data.listJobs.items);\r\n        }\r\n      \r\n        getJobList();\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n  \r\n      }\r\n  \r\n    },[]);\r\n\r\n    async function deleteThisJob (jobId){\r\n      await API.graphql(\r\n        graphqlOperation(\r\n          deleteJob,{\r\n            input:{\r\n              id:jobId\r\n            }\r\n          }\r\n        )\r\n      );\r\n      alert(\"Job Deleted Sucessfully\");\r\n      window.location.reload();\r\n    }; \r\n\r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n          <ul class=\"menu\">\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"company\">Dashboard</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllJobs\">View jobs</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllInternships\">View internships</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <main class=\"admin__main\">\r\n        <h2 style={{color:'rebeccapurple'}}>All Jobs </h2>\r\n          <p style={{color:'rebeccapurple'}}>Posted By You</p>\r\n          <div class=\"dashboard\">\r\n          <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Job Name</th>\r\n                        <th>Job Location</th>\r\n                        <th>Post Date</th>\r\n                        <th>Last Date</th>\r\n                        <th>View Applicants</th>\r\n                        <th>View Job Details</th>\r\n                        <th>Edit Job Details</th>\r\n                        <th>Delete Job</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobs.map(jobs=>\r\n                                <tr>\r\n                                    <td>{jobs.jobName}</td>\r\n                                    <td>{jobs.jobLocation}</td>\r\n                                    <td>{moment(jobs.createdAt).format('ll')}</td>\r\n                                    <td>{moment(jobs.lastDate).format('ll')}</td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/viewJobApplicants${jobs.id}`\r\n                                            }}>View</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/job${jobs.id}`\r\n                                            }}>View</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${jobs.id}`\r\n                                            }}>Edit</Link>\r\n                                    </td>\r\n                                    <td><Link onClick={() =>{deleteThisJob(jobs.id)}} style={{color:'black'}}>Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2018 Grid Inc.\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewAllJobsScreen);","E:\\reactjs\\jobszone\\src\\screens\\ViewAllInternshipsScreen.js",["188"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction ViewAllInternshipsScreen(){\r\n    const [jobs,setJobs]=useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n          const getJobList= async()=>{\r\n            const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n            const joblist=await API.graphql(\r\n              graphqlOperation(\r\n                listJobs,{\r\n                    filter:{\r\n                      jobType: {contains: \"internship\"},\r\n                      jobUserId: {contains: userInfo.attributes.sub}\r\n                    }\r\n                }   \r\n            ));\r\n          setJobs(joblist.data.listJobs.items);\r\n          }\r\n        \r\n          getJobList();\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n    \r\n        }\r\n    \r\n      },[]);\r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n          <ul class=\"menu\">\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"company\">Dashboard</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllJobs\">View jobs</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllInternships\">View internships</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <main class=\"admin__main\">\r\n          <h2 style={{color:'rebeccapurple'}}>All Internships </h2>\r\n          <p style={{color:'rebeccapurple'}}>Posted By You</p>\r\n          <div class=\"dashboard\">\r\n            <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Internship Name</th>\r\n                        <th>Internship Location</th>\r\n                        <th>Post Date</th>\r\n                        <th>Last Date</th>\r\n                        <th>View Applicants</th>\r\n                        <th>View Internship Details</th>\r\n                        <th>Edit Internship Details</th>\r\n                        <th>Delete Internship</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobs.map(jobs=>\r\n                                <tr>\r\n                                    <td>{jobs.jobName}</td>\r\n                                    <td>{jobs.jobLocation}</td>\r\n                                    <td>{moment(jobs.createdAt).format('ll')}</td>\r\n                                    <td>{moment(jobs.lastDate).format('ll')}</td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/viewJobApplicants${jobs.id}`\r\n                                            }}>View</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/internship${jobs.id}`\r\n                                            }}>View</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${jobs.id}`\r\n                                            }}>Edit</Link>\r\n                                    </td>\r\n                                    <td><Link style={{color:'black'}} >Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2018 Grid Inc.\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ViewAllInternshipsScreen;","E:\\reactjs\\jobszone\\src\\screens\\ViewJobApplicantsScreen.js",["189","190"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, graphqlOperation, Storage } from 'aws-amplify';\r\nimport {listJobApplicants} from '../graphql/queries';\r\n\r\nimport {Link, useParams, withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction ViewJobApplicantsScreen(props){\r\n    const {jobId} =useParams();\r\n    const [jobApplicants,setJobApplicants]=useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n          const getJobApplicant=async()=>{\r\n          const AllApplicants=await API.graphql(\r\n            graphqlOperation(\r\n              listJobApplicants,{\r\n                filter:{\r\n                  jobID: {contains: jobId}\r\n                }\r\n              }\r\n            )\r\n          )\r\n          setJobApplicants(AllApplicants.data.listJobApplicants.items)\r\n         \r\n          }\r\n        \r\n          getJobApplicant();\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n    \r\n        }\r\n    \r\n      },[]);\r\n      const getResumeUrl=async(resumeFile)=>{\r\n        const resumeUrl=await Storage.get(resumeFile);\r\n        console.log(resumeUrl);\r\n        window.open(resumeUrl, '_blank', 'noopener,noreferrer')\r\n        \r\n      }\r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n          <ul class=\"menu\">\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"company\">Dashboard</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllJobs\">View jobs</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"viewAllInternships\">View internships</a>\r\n            </li>\r\n            <li class=\"menu__item\">\r\n              <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <main class=\"admin__main\">\r\n\r\n          <h2 style={{color:'rebeccapurple'}}>All Applicants </h2>\r\n          <p style={{color:'rebeccapurple'}}>For job/internship</p>\r\n          <div class=\"dashboard\">\r\n            <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Name</th>\r\n                        <th>College</th>\r\n                        <th>Email</th>\r\n                        <th>Mobile No.</th>\r\n                        <th>Applied Date</th>\r\n                        <th>View Resume</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobApplicants.map(jobApplicants=>\r\n                     \r\n                                <tr>\r\n                                    <td>{jobApplicants.user.firstName} {jobApplicants.user.lastName}</td>\r\n                                    <td>{jobApplicants.user.collegeName}</td>\r\n                                    <td>{jobApplicants.user.email}</td>\r\n                                    <td>{jobApplicants.user.mobileNo}</td>\r\n                                    <td>{moment(jobApplicants.createdAt).format('ll')}</td>\r\n                                    <td><Link onClick={() =>{getResumeUrl(jobApplicants.user.resumeFile)}} style={{color:'black'}}>View</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2018 Grid Inc.\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewJobApplicantsScreen);","E:\\reactjs\\jobszone\\src\\components\\MyAppications.js",[],"E:\\reactjs\\jobszone\\src\\screens\\MyAppicationsScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\JobSearchScreen.js",["191"],"import React, { useEffect, useState } from 'react';\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport './screensStyle.css';\r\nimport Search from '../components/Search';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction JobSearchScreen() {\r\n  let {searchTerm}=useParams();\r\n  console.log(searchTerm);\r\n  const isTablet = useMediaQuery({ query: '(max-width: 1100px)' })\r\n  const isMobile = useMediaQuery({\r\n    query: '(max-width: 600px)'\r\n  })\r\n  const [jobsByJobName,setJobsByJobName]=useState([]);\r\n  const [jobsByLocation,setJobsByLocation]=useState([]);\r\n  const [jobsByCompanyName,setJobsByCompanyName]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobList= async()=>{\r\n      const joblistByJobName=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n            filter:{\r\n                jobName: {contains: searchTerm}\r\n              } \r\n            }\r\n      ));\r\n      const joblistByCompanyName=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n            filter:{\r\n                companyName: {contains: searchTerm}\r\n              } \r\n            }\r\n      ));\r\n      const joblistByLocation=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n            filter:{\r\n                jobLocation: {contains: searchTerm}\r\n              } \r\n            }\r\n      ));\r\n      setJobsByJobName(joblistByJobName.data.listJobs.items);\r\n      setJobsByCompanyName(joblistByCompanyName.data.listJobs.items);\r\n      setJobsByLocation(joblistByLocation.data.listJobs.items);\r\n      }\r\n    \r\n      getJobList();\r\n    }\r\n    catch{\r\n\r\n    }\r\n\r\n  },[]);\r\n  return (\r\n    <div >\r\n     <Header />\r\n     <div className=\"LargeSearchContainer\" style={{marginTop:100,marginLeft:400}} >\r\n     <Search \r\n     searchValue={searchTerm}\r\n     />\r\n     </div>\r\n     <div className={ (isMobile) ? \"JobsSmall\" : ((isTablet) ? \"JobsMedium\" : \"JobsLarge\")} >\r\n     {\r\n       jobsByJobName.map(jobsByJobName => <JobCard \r\n        jobID={jobsByJobName.id}\r\n        companyName={jobsByJobName.companyName}\r\n        lastDate={jobsByJobName.lastDate}\r\n        role={jobsByJobName.jobName}\r\n        salary={jobsByJobName.salary}\r\n        experience={jobsByJobName.experience}\r\n        location={jobsByJobName.jobLocation}\r\n        />\r\n       )\r\n     }\r\n     {\r\n       jobsByCompanyName.map(jobsByCompanyName => <JobCard \r\n        jobID={jobsByCompanyName.id}\r\n        companyName={jobsByCompanyName.companyName}\r\n        lastDate={jobsByCompanyName.lastDate}\r\n        role={jobsByCompanyName.jobName}\r\n        salary={jobsByCompanyName.salary}\r\n        experience={jobsByCompanyName.experience}\r\n        location={jobsByLocation.jobLocation}\r\n        />\r\n       )\r\n     }\r\n     {\r\n       jobsByLocation.map(jobsByLocation => <JobCard \r\n        jobID={jobsByLocation.id}\r\n        companyName={jobsByLocation.companyName}\r\n        lastDate={jobsByLocation.lastDate}\r\n        role={jobsByLocation.jobName}\r\n        salary={jobsByLocation.salary}\r\n        experience={jobsByLocation.experience}\r\n        location={jobsByLocation.jobLocation}\r\n        />\r\n       )\r\n     }\r\n     </div>\r\n     <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobSearchScreen;\r\n","E:\\reactjs\\jobszone\\src\\components\\CompanyRegister.js",["192"],"import { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React,{useEffect, useState} from 'react';\r\nimport {createUser} from '../graphql/mutations';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n    const CompanyRegister =(props)=>{\r\n    const[formState,updateFormState]=useState({\r\n      fname:'',lname:'',email:'',mobileNo:'',address:'',\r\n      age:20,sex:'',companyName:'',userPost:'',companyWebsite:'',\r\n      officeAddress:''\r\n\r\n    });\r\n    const[userId,setUserId]=useState('');\r\n\r\n    function handleChange(evt) {\r\n      const value = evt.target.value;\r\n      updateFormState({\r\n        ...formState,\r\n        [evt.target.name]: value\r\n      });\r\n    }\r\n \r\n   useEffect(()=>{\r\n       try{\r\n       const completeRegistration = async()=>{\r\n        const userInfo = await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        updateFormState({ email: userInfo.attributes.email });\r\n        updateFormState({ mobileNo: userInfo.attributes.phone_number });\r\n        setUserId(userInfo.attributes.sub)\r\n       }\r\n\r\n       completeRegistration();\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n   },[]);\r\n   const submitForm = async()=>{\r\n    await API.graphql(\r\n      graphqlOperation(\r\n        createUser,\r\n          {\r\n            input:{\r\n              id:`${userId}`,\r\n              firstName:formState.fname,\r\n              lastName :formState.lname,\r\n              age:formState.age,\r\n              sex:formState.sex,\r\n              email:formState.email,\r\n              mobileNo:formState.mobileNo,\r\n              address:formState.address,\r\n              companyName:formState.companyName,\r\n              companyWebsite:formState.companyWebsite,\r\n              userPost:formState.userPost,\r\n              officeAddress:formState.officeAddress\r\n            }\r\n\r\n          }\r\n      ));\r\n      alert(\"Registration Sucessfull\");\r\n      props.history.push('/viewAllJobs');\r\n  }\r\n\r\n    return (\r\n\r\n\r\n    <div className=\"formContainer\">\r\n    <form >\r\n    <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"first-name\">First Name</label>\r\n      <input type=\"text\" value={formState.fname} onChange={handleChange} className=\"form-control\" name=\"fname\"  placeholder=\"Enter First Name\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"last-name\">Last Name</label>\r\n      <input type=\"text\" value={formState.lname} onChange={handleChange} className=\"form-control\" name=\"lname\"  placeholder=\"Enter Last Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"email\">Email</label>\r\n      <input type=\"email\" value={formState.email} onChange={handleChange} className=\"form-control\" name=\"email\"  placeholder=\"Enter Your Email\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"mobile-no\">Mobile No</label>\r\n      <input type=\"text\" value={formState.mobileNo}  onChange={handleChange} className=\"form-control\" name=\"mobileNo\"  placeholder=\"Enter Your Mobile No\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"age\">Age</label>\r\n      <input type=\"number\" value={formState.age} onChange={handleChange} className=\"form-control\" name=\"age\"  placeholder=\"Enter Your Age\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"sex\">Gender</label>\r\n    <select  value={formState.sex}  onChange={handleChange} className=\"form-control\" name=\"sex\" required>\r\n     <option value=''>Select Your Gender</option>\r\n      <option value='M'>Male</option>\r\n      <option value='F'>Female</option>\r\n      <option value='NB'>Can't prefer to say</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"address\">Current Address</label>\r\n      <input type=\"text\" value={formState.address}  onChange={handleChange} className=\"form-control\" name=\"address\"  placeholder=\"Enter Your Current Address\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"company-name\">Comapny Name</label>\r\n      <input type=\"text\" value={formState.companyName}  onChange={handleChange} className=\"form-control\" name=\"collegeName\"  placeholder=\"Enter Your Organization Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"userPost\">Your Designation</label>\r\n      <input type=\"text\" value={formState.userPost} onChange={handleChange} className=\"form-control\" name=\"userPost\"  placeholder=\"Enter Your Designation in Company\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"stream\">Company Website</label>\r\n      <input type=\"text\" value={formState.companyWebsite}  onChange={handleChange} className=\"form-control\" name=\"companyWebsite\" placeholder=\"Enter Your Company Website\" required/>\r\n    </div>\r\n  </div>\r\n   <div className=\"form-group\">\r\n    <label for=\"officeAddress\">Office Address</label>\r\n    <input type=\"text\" value={formState.officeAddress}  onChange={handleChange} className=\"form-control\" name=\"officeAddress\" placeholder=\"Enter Your Company Website\" required/>\r\n   </div>\r\n  <div className=\"text-center submitButton\">\r\n            <button  onClick={submitForm} style={{height:50,width:120,fontFamily:'sans-serif',color:'white',fontSize:20}} name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n          </div>\r\n</form>\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\nexport default CompanyRegister;","E:\\reactjs\\jobszone\\src\\components\\EditCompanyProfile.js",["193"],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":26},{"ruleId":"198","severity":1,"message":"202","line":1,"column":28,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"203","line":11,"column":19,"nodeType":"200","messageId":"201","endLine":11,"endColumn":22},{"ruleId":"198","severity":1,"message":"204","line":11,"column":24,"nodeType":"200","messageId":"201","endLine":11,"endColumn":28},{"ruleId":"198","severity":1,"message":"205","line":11,"column":30,"nodeType":"200","messageId":"201","endLine":11,"endColumn":46},{"ruleId":"198","severity":1,"message":"206","line":15,"column":9,"nodeType":"200","messageId":"201","endLine":15,"endColumn":16},{"ruleId":"198","severity":1,"message":"207","line":15,"column":18,"nodeType":"200","messageId":"201","endLine":15,"endColumn":27},{"ruleId":"198","severity":1,"message":"204","line":8,"column":15,"nodeType":"200","messageId":"201","endLine":8,"endColumn":19},{"ruleId":"208","severity":1,"message":"209","line":302,"column":13,"nodeType":"210","endLine":302,"endColumn":149},{"ruleId":"211","severity":1,"message":"212","line":43,"column":5,"nodeType":"213","endLine":43,"endColumn":7,"suggestions":"214"},{"ruleId":"211","severity":1,"message":"212","line":56,"column":5,"nodeType":"213","endLine":56,"endColumn":7,"suggestions":"215"},{"ruleId":"198","severity":1,"message":"216","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":20},{"ruleId":"198","severity":1,"message":"217","line":3,"column":9,"nodeType":"200","messageId":"201","endLine":3,"endColumn":19},{"ruleId":"198","severity":1,"message":"218","line":4,"column":39,"nodeType":"200","messageId":"201","endLine":4,"endColumn":46},{"ruleId":"208","severity":1,"message":"219","line":50,"column":7,"nodeType":"210","endLine":50,"endColumn":34},{"ruleId":"208","severity":1,"message":"219","line":59,"column":13,"nodeType":"210","endLine":59,"endColumn":40},{"ruleId":"208","severity":1,"message":"219","line":42,"column":13,"nodeType":"210","endLine":42,"endColumn":40},{"ruleId":"211","severity":1,"message":"212","line":36,"column":9,"nodeType":"213","endLine":36,"endColumn":11,"suggestions":"220"},{"ruleId":"208","severity":1,"message":"219","line":50,"column":13,"nodeType":"210","endLine":50,"endColumn":40},{"ruleId":"211","severity":1,"message":"221","line":61,"column":5,"nodeType":"213","endLine":61,"endColumn":7,"suggestions":"222"},{"ruleId":"198","severity":1,"message":"216","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":20},{"ruleId":"198","severity":1,"message":"217","line":3,"column":9,"nodeType":"200","messageId":"201","endLine":3,"endColumn":19},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'API' is defined but never used.","'Auth' is defined but never used.","'graphqlOperation' is defined but never used.","'getUser' is defined but never used.","'listUsers' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'jobId'. Either include it or remove the dependency array.","ArrayExpression",["225"],["226"],"'withRouter' is defined but never used.","'createUser' is defined but never used.","'Storage' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["227"],"React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array.",["228"],"no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"229","fix":"231"},{"desc":"229","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [jobId]",{"range":"235","text":"236"},{"range":"237","text":"236"},{"range":"238","text":"236"},"Update the dependencies array to be: [searchTerm]",{"range":"239","text":"240"},[1210,1212],"[jobId]",[1639,1641],[1020,1022],[1861,1863],"[searchTerm]"]