[{"E:\\reactjs\\jobszone\\src\\index.js":"1","E:\\reactjs\\jobszone\\src\\App.js":"2","E:\\reactjs\\jobszone\\src\\reportWebVitals.js":"3","E:\\reactjs\\jobszone\\src\\components\\Search.js":"4","E:\\reactjs\\jobszone\\src\\screens\\CreateJobScreen.js":"5","E:\\reactjs\\jobszone\\src\\screens\\InternshipDetailsScreen.js":"6","E:\\reactjs\\jobszone\\src\\screens\\CreateInternshipScreen.js":"7","E:\\reactjs\\jobszone\\src\\screens\\JobDetailsScreen.js":"8","E:\\reactjs\\jobszone\\src\\screens\\ApplyJobScreen.js":"9","E:\\reactjs\\jobszone\\src\\screens\\JobScreen.js":"10","E:\\reactjs\\jobszone\\src\\components\\Footer.js":"11","E:\\reactjs\\jobszone\\src\\components\\CreateJobForm.js":"12","E:\\reactjs\\jobszone\\src\\components\\InternshipDetails.js":"13","E:\\reactjs\\jobszone\\src\\components\\JobCard.js":"14","E:\\reactjs\\jobszone\\src\\components\\CreateInternshipForm.js":"15","E:\\reactjs\\jobszone\\src\\components\\ApplyJobForm.js":"16","E:\\reactjs\\jobszone\\src\\components\\Header.js":"17","E:\\reactjs\\jobszone\\src\\components\\JobDetails.js":"18","E:\\reactjs\\jobszone\\src\\aws-exports.js":"19","E:\\reactjs\\jobszone\\src\\screens\\ProfileScreen.js":"20","E:\\reactjs\\jobszone\\src\\components\\ViewProfile.js":"21","E:\\reactjs\\jobszone\\src\\graphql\\queries.js":"22","E:\\reactjs\\jobszone\\src\\screens\\FirstRegisterScreen.js":"23","E:\\reactjs\\jobszone\\src\\components\\FirstRegister.js":"24","E:\\reactjs\\jobszone\\src\\graphql\\mutations.js":"25","E:\\reactjs\\jobszone\\src\\screens\\EditProfileScreen.js":"26","E:\\reactjs\\jobszone\\src\\components\\EditProfile.js":"27","E:\\reactjs\\jobszone\\src\\mutations.js":"28","E:\\reactjs\\jobszone\\src\\screens\\InternshipScreen.js":"29","E:\\reactjs\\jobszone\\src\\components\\InternshipCard.js":"30","E:\\reactjs\\jobszone\\src\\screens\\CompanyScreen.js":"31","E:\\reactjs\\jobszone\\src\\screens\\ViewAllJobsScreen.js":"32","E:\\reactjs\\jobszone\\src\\screens\\ViewAllInternshipsScreen.js":"33","E:\\reactjs\\jobszone\\src\\screens\\ViewJobApplicantsScreen.js":"34","E:\\reactjs\\jobszone\\src\\components\\MyAppications.js":"35","E:\\reactjs\\jobszone\\src\\screens\\MyAppicationsScreen.js":"36","E:\\reactjs\\jobszone\\src\\screens\\JobSearchScreen.js":"37","E:\\reactjs\\jobszone\\src\\components\\CompanyRegister.js":"38","E:\\reactjs\\jobszone\\src\\components\\EditCompanyProfile.js":"39","E:\\reactjs\\jobszone\\src\\screens\\AdminScreen.js":"40","E:\\reactjs\\jobszone\\src\\screens\\ViewAdminJobsScreen.js":"41","E:\\reactjs\\jobszone\\src\\screens\\ViewAdminInternshipsScreen.js":"42","E:\\reactjs\\jobszone\\src\\screens\\ViewAdminJobApplicantScreen.js":"43","E:\\reactjs\\jobszone\\src\\screens\\ViewJobRequestsScreen.js":"44","E:\\reactjs\\jobszone\\src\\screens\\ViewAllUsersScreen.js":"45","E:\\reactjs\\jobszone\\src\\screens\\ViewAllCompaniesScreen.js":"46","E:\\reactjs\\jobszone\\src\\screens\\EditJobScreen.js":"47","E:\\reactjs\\jobszone\\src\\components\\EditJobForm.js":"48","E:\\reactjs\\jobszone\\src\\components\\EditInternshipForm.js":"49","E:\\reactjs\\jobszone\\src\\screens\\EditInternshipScreen.js":"50","E:\\reactjs\\jobszone\\src\\screens\\ViewAllJobApplicantsScreen.js":"51"},{"size":541,"mtime":1612093271168,"results":"52","hashOfConfig":"53"},{"size":4379,"mtime":1612863674904,"results":"54","hashOfConfig":"53"},{"size":362,"mtime":499162500000,"results":"55","hashOfConfig":"53"},{"size":798,"mtime":1612680000804,"results":"56","hashOfConfig":"53"},{"size":437,"mtime":1611913420707,"results":"57","hashOfConfig":"53"},{"size":402,"mtime":1611899209050,"results":"58","hashOfConfig":"53"},{"size":473,"mtime":1611937648474,"results":"59","hashOfConfig":"53"},{"size":367,"mtime":1611893777991,"results":"60","hashOfConfig":"53"},{"size":433,"mtime":1611940028988,"results":"61","hashOfConfig":"53"},{"size":1618,"mtime":1612785385586,"results":"62","hashOfConfig":"53"},{"size":1798,"mtime":1612418025519,"results":"63","hashOfConfig":"53"},{"size":10762,"mtime":1612793698544,"results":"64","hashOfConfig":"53"},{"size":3684,"mtime":1612793868661,"results":"65","hashOfConfig":"53"},{"size":1948,"mtime":1612460657241,"results":"66","hashOfConfig":"53"},{"size":12815,"mtime":1612793715217,"results":"67","hashOfConfig":"53"},{"size":7791,"mtime":1612640376623,"results":"68","hashOfConfig":"53"},{"size":2890,"mtime":1612759879845,"results":"69","hashOfConfig":"53"},{"size":3910,"mtime":1612793901972,"results":"70","hashOfConfig":"53"},{"size":839,"mtime":1612793190210,"results":"71","hashOfConfig":"53"},{"size":441,"mtime":1612154860050,"results":"72","hashOfConfig":"53"},{"size":2828,"mtime":1612865593040,"results":"73","hashOfConfig":"53"},{"size":16090,"mtime":1612793185798,"results":"74","hashOfConfig":"53"},{"size":1831,"mtime":1612718988498,"results":"75","hashOfConfig":"53"},{"size":5862,"mtime":1612865525041,"results":"76","hashOfConfig":"53"},{"size":21778,"mtime":1612793186037,"results":"77","hashOfConfig":"53"},{"size":1291,"mtime":1612714875470,"results":"78","hashOfConfig":"53"},{"size":6669,"mtime":1612715015641,"results":"79","hashOfConfig":"53"},{"size":474,"mtime":1612373152660,"results":"80","hashOfConfig":"53"},{"size":1748,"mtime":1612785551825,"results":"81","hashOfConfig":"53"},{"size":1965,"mtime":1612466102500,"results":"82","hashOfConfig":"53"},{"size":3759,"mtime":1612786027567,"results":"83","hashOfConfig":"53"},{"size":4968,"mtime":1612866039285,"results":"84","hashOfConfig":"53"},{"size":5071,"mtime":1612866062462,"results":"85","hashOfConfig":"53"},{"size":6009,"mtime":1612865018947,"results":"86","hashOfConfig":"53"},{"size":2764,"mtime":1612676850670,"results":"87","hashOfConfig":"53"},{"size":449,"mtime":1612675013255,"results":"88","hashOfConfig":"53"},{"size":3445,"mtime":1612683205339,"results":"89","hashOfConfig":"53"},{"size":5545,"mtime":1612866176707,"results":"90","hashOfConfig":"53"},{"size":6265,"mtime":1612866218836,"results":"91","hashOfConfig":"53"},{"size":3478,"mtime":1612780497881,"results":"92","hashOfConfig":"53"},{"size":5979,"mtime":1612863743259,"results":"93","hashOfConfig":"53"},{"size":6136,"mtime":1612863716507,"results":"94","hashOfConfig":"53"},{"size":4617,"mtime":1612785568380,"results":"95","hashOfConfig":"53"},{"size":4994,"mtime":1612856419929,"results":"96","hashOfConfig":"53"},{"size":4854,"mtime":1612865591257,"results":"97","hashOfConfig":"53"},{"size":7367,"mtime":1612865894615,"results":"98","hashOfConfig":"53"},{"size":427,"mtime":1612792118150,"results":"99","hashOfConfig":"53"},{"size":10483,"mtime":1612863365449,"results":"100","hashOfConfig":"53"},{"size":12380,"mtime":1612863341131,"results":"101","hashOfConfig":"53"},{"size":462,"mtime":1612855447445,"results":"102","hashOfConfig":"53"},{"size":6444,"mtime":1612864919892,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"w7g81v",{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\reactjs\\jobszone\\src\\index.js",[],["217","218"],"E:\\reactjs\\jobszone\\src\\App.js",["219","220","221"],"E:\\reactjs\\jobszone\\src\\reportWebVitals.js",[],"E:\\reactjs\\jobszone\\src\\components\\Search.js",[],"E:\\reactjs\\jobszone\\src\\screens\\CreateJobScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\InternshipDetailsScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\CreateInternshipScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\JobDetailsScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\ApplyJobScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\JobScreen.js",["222"],"import React, { useEffect, useState } from 'react';\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport JobCard from \"../components/JobCard\";\nimport { useMediaQuery } from 'react-responsive';\nimport './screensStyle.css';\nimport Search from '../components/Search';\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\nimport {listJobs} from '../graphql/queries';\n\n\nfunction JobScreen() {\n  const isTablet = useMediaQuery({ query: '(max-width: 1100px)' })\n  const isMobile = useMediaQuery({\n    query: '(max-width: 600px)'\n  })\n  const [jobs,setJobs]=useState([]);\n  useEffect(()=>{\n    try{\n      const getJobList= async()=>{\n      const joblist=await API.graphql(\n        graphqlOperation(\n          listJobs,{\n            filter:{\n              jobType: {contains: \"job\"},\n              jobStatus:{eq:\"active\"}\n            }\n        }    \n      ))\n      setJobs(joblist.data.listJobs.items);\n      }\n    \n      getJobList();\n    }\n    catch{\n\n    }\n\n  },[]);\n  return (\n    <div >\n     <Header />\n     <div className=\"LargeSearchContainer\" style={{marginTop:100,marginLeft:400}} >\n     <Search />\n     </div>\n     <div className={ (isMobile) ? \"JobsSmall\" : ((isTablet) ? \"JobsMedium\" : \"JobsLarge\")} >\n     {\n       jobs.map(jobs => <JobCard \n        jobID={jobs.id}\n        companyName={jobs.companyName}\n        lastDate={jobs.lastDate}\n        role={jobs.jobName}\n        salary={jobs.salary}\n        experience={jobs.experience}\n        location={jobs.jobLocation}\n        />\n       )\n     }\n     </div>\n     <Footer />\n    </div>\n  );\n}\n\nexport default JobScreen;\n","E:\\reactjs\\jobszone\\src\\components\\Footer.js",[],"E:\\reactjs\\jobszone\\src\\components\\CreateJobForm.js",["223"],"import { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React,{useEffect, useState} from 'react';\r\nimport { createJob,createJobCretaria,createJobDescription,createJobSkill,updateJobCount } from '../graphql/mutations';\r\nimport { getJobCount } from '../graphql/queries';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction CreateJobForm(props){\r\n\r\n  const [userId,setUserId]=useState('');\r\n  const [discriptionFields, setDiscriptionFields] = useState([{ value: '' }]);\r\n  const [skillsFields, setSkillsFields] = useState([{ value: '' }]);\r\n  const [criteriaFields, setCriteriaFields] = useState([{ value: '' }]);\r\n  const [jobDetails,updateJobDetils]=useState({\r\n    jobTitle:'',jobName:'',companyName:'',companyWebsite:'',aboutCompany:'',\r\n    experience:'',salary:'',jobLocation:'',lastDate:''\r\n  });\r\n  const[jobCount,setJobCount]=useState(1);\r\n  useEffect(()=>{\r\n    const fetchJobCount= async()=>{\r\n      const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n      setUserId(userInfo.attributes.sub);\r\n      const jobCountData = await API.graphql(\r\n        graphqlOperation(\r\n          getJobCount,{\r\n            id:'jobCount'\r\n          }\r\n        )\r\n      );\r\n     setJobCount(jobCountData.data.getJobCount.count+1);\r\n    }\r\n\r\n     fetchJobCount();\r\n\r\n  },[]);\r\n\r\n  function handleDiscriptionChange(i, event) {\r\n    const values = [...discriptionFields];\r\n    values[i].value = event.target.value;\r\n    setDiscriptionFields(values);\r\n  }\r\n\r\n  function handleDiscriptionAdd() {\r\n    const values = [...discriptionFields];\r\n    values.push({ value: null });\r\n    setDiscriptionFields(values);\r\n  }\r\n\r\n  function handleDiscriptionRemove(i) {\r\n    const values = [...discriptionFields];\r\n    values.splice(i, 1);\r\n    setDiscriptionFields(values);\r\n  }\r\n  function handleSkillsChange(i, event) {\r\n    const values = [...skillsFields];\r\n    values[i].value = event.target.value;\r\n    setSkillsFields(values);\r\n  }\r\n\r\n  function handleSkillsAdd() {\r\n    const values = [...skillsFields];\r\n    values.push({ value: null });\r\n    setSkillsFields(values);\r\n  }\r\n\r\n  function handleSkillsRemove(i) {\r\n    const values = [...skillsFields];\r\n    values.splice(i, 1);\r\n    setSkillsFields(values);\r\n  }\r\n  function handleCriteriaChange(i, event) {\r\n    const values = [...criteriaFields];\r\n    values[i].value = event.target.value;\r\n    setCriteriaFields(values);\r\n  }\r\n\r\n  function handleCriteriaAdd() {\r\n    const values = [...criteriaFields];\r\n    values.push({ value: null });\r\n    setCriteriaFields(values);\r\n  }\r\n\r\n  function handleCriteriaRemove(i) {\r\n    const values = [...criteriaFields];\r\n    values.splice(i, 1);\r\n    setCriteriaFields(values);\r\n  }\r\n  function handleChange(evt) {\r\n    const value = evt.target.value;\r\n    updateJobDetils({\r\n      ...jobDetails,\r\n      [evt.target.name]: value\r\n    });\r\n  }\r\n   const createNewJob=async()=>{\r\n    \r\n     await API.graphql(\r\n       graphqlOperation(\r\n         updateJobCount,{\r\n           input:{\r\n             id:'jobCount',\r\n             count:jobCount\r\n           }\r\n\r\n         }\r\n       )\r\n     );\r\n     await API.graphql(\r\n       graphqlOperation(\r\n         createJob,{\r\n           input:{\r\n            id:`job${jobCount}`,\r\n            jobName:jobDetails.jobName,\r\n            jobType:\"job\",\r\n            jobUserId:userId,\r\n            jobStatus:\"created\",\r\n            jobTitle:jobDetails.jobTitle,\r\n            companyName:jobDetails.companyName,\r\n            companyWebsite:jobDetails.companyWebsite,\r\n            aboutCompany:jobDetails.aboutCompany,\r\n            experience:jobDetails.experience,\r\n            salary:jobDetails.salary,\r\n            jobLocation:jobDetails.jobLocation,\r\n            lastDate:jobDetails.lastDate\r\n           }\r\n         }\r\n       )\r\n     );\r\n     let lDis =discriptionFields.length;\r\n     let iDis=0;\r\n     while(iDis<lDis){\r\n     await API.graphql(\r\n       graphqlOperation(\r\n         createJobDescription,{\r\n           input:{\r\n             content:discriptionFields[iDis].value,\r\n             jobID:`job${jobCount}`\r\n           }\r\n         }\r\n       )\r\n     );\r\n     iDis=iDis+1;\r\n        }\r\n        let lSkil=skillsFields.length;\r\n        let iSkill=0\r\n        while(iSkill<lSkil){\r\n     await API.graphql(\r\n      graphqlOperation(\r\n        createJobSkill,{\r\n          input:{\r\n            content:skillsFields[iSkill].value,\r\n            jobID:`job${jobCount}`\r\n          }\r\n        }\r\n      )\r\n    );\r\n    iSkill=iSkill+1;\r\n      }\r\n      let lCri=criteriaFields.length;\r\n      let iCri=0;\r\n      while(iCri<lCri){\r\n    await API.graphql(\r\n      graphqlOperation(\r\n        createJobCretaria,{\r\n          input:{\r\n            content:criteriaFields[iCri].value,\r\n            jobID:`job${jobCount}`\r\n          }\r\n        }\r\n      )\r\n    );\r\n    iCri=iCri+1\r\n      }\r\n      alert(\"Sucessfully created a job. Your Job will be active within 2 hrs, If not contact us.\");\r\n      props.history.push('/viewAllJobs');\r\n\r\n        }\r\n\r\n    return (\r\n\r\n\r\n    <div className=\"formContainer\">\r\n    <form >\r\n    <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label htmlFor=\"job-title\">Job Title</label>\r\n      <input type=\"text\" value={jobDetails.jobTitle} onChange={handleChange} className=\"form-control\" name=\"jobTitle\" id=\"job-title\" placeholder=\"Enter Job Title\" />\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"job-name\">Job Name</label>\r\n      <input type=\"text\" value={jobDetails.jobName} onChange={handleChange} className=\"form-control\" name=\"jobName\" id=\"job-name\" placeholder=\"Enter Job Name\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"company-name\">Company Name</label>\r\n      <input type=\"text\" value={jobDetails.companyName} onChange={handleChange} className=\"form-control\" name=\"companyName\" id=\"job-title\" placeholder=\"Enter Your Company Name\" />\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"company-website\">Company Website</label>\r\n      <input type=\"text\" value={jobDetails.companyWebsite} onChange={handleChange} className=\"form-control\" name=\"companyWebsite\" id=\"job-website\" placeholder=\"Enter Company Official Website\" />\r\n    </div>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"about-company\">About Company</label>\r\n    <textarea className=\"form-control\" value={jobDetails.aboutCompany} onChange={handleChange} id=\"about-company\" name=\"aboutCompany\" rows=\"3\"></textarea>\r\n  </div>\r\n  <div className=\"form-row\">\r\n  <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"experience\">Experience Required</label>\r\n    <input type=\"text\" id=\"experience\" value={jobDetails.experience} onChange={handleChange}  name=\"experience\"className=\"form-control\" placeholder=\"Enter Experience Required For Job (eg:- 0-1years)\" />\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n      <label htmlFor=\"salary\">Salary</label>\r\n      <input type=\"text\" value={jobDetails.salary} onChange={handleChange} className=\"form-control\" name=\"salary\" id=\"salary\" placeholder=\"Enter Salary Offered (eg:- 3 LPA )\" />\r\n    </div>   \r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"job-location\">Job Loaction</label>\r\n      <input type=\"text\" value={jobDetails.jobLocation} onChange={handleChange} className=\"form-control\" name=\"jobLocation\" id=\"job-location\" placeholder=\"Enter Job Location (for multiple enter Bengluru/Pune )\" />\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label htmlFor=\"last-date\">Last Date To Apply</label>\r\n      <input type=\"date\" value={jobDetails.lastDate} onChange={handleChange} className=\"form-control\" name=\"lastDate\" id=\"lastDate\"  />\r\n    </div>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"job-description\">Job Description (add multiple lines) </label>\r\n    <button className=\"btn\" style={{marginLeft:30}} type=\"button\" onClick={() => handleDiscriptionAdd()}>\r\n       Add more field\r\n      </button>\r\n\r\n      {discriptionFields.map((field, idx) => {\r\n        return (\r\n          <div key={`${field}-${idx}`}>\r\n            <input\r\n              style={{marginTop:10,marginBottom:5}}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={field.value}\r\n              name=\"jobDescription\"\r\n              placeholder=\"Describe Job\"\r\n              onChange={e => handleDiscriptionChange(idx, e)}\r\n            />\r\n            <button className=\"btn\" type=\"button\" onClick={() => handleDiscriptionRemove(idx)}>\r\n             Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"desired-skills\">Desired Skills (add multiple lines) </label>\r\n    <button className=\"btn\" style={{marginLeft:30}} type=\"button\" onClick={() => handleSkillsAdd()}>\r\n       Add more field\r\n      </button>\r\n\r\n      {skillsFields.map((field, idx) => {\r\n        return (\r\n          <div key={`${field}-${idx}`}>\r\n            <input\r\n              style={{marginTop:10,marginBottom:5}}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={field.value}\r\n              name=\"desiredSkills\"\r\n              placeholder=\"Add desired skills required for Job\"\r\n              onChange={e => handleSkillsChange(idx, e)}\r\n            />\r\n            <button className=\"btn\" type=\"button\" onClick={() => handleSkillsRemove(idx)}>\r\n             Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"criteria\">Add Criteria (add multiple lines) </label>\r\n    <button className=\"btn\" style={{marginLeft:30}} type=\"button\" onClick={() => handleCriteriaAdd()}>\r\n       Add more field\r\n      </button>\r\n\r\n      {criteriaFields.map((field, idx) => {\r\n        return (\r\n          <div key={`${field}-${idx}`}>\r\n            <input\r\n              style={{marginTop:10,marginBottom:5}}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={field.value}\r\n              name=\"criteria\"\r\n              placeholder=\"Enter criteria required for job\"\r\n              onChange={e => handleCriteriaChange(idx, e)}\r\n            />\r\n            <button className=\"btn\" type=\"button\" onClick={() => handleCriteriaRemove(idx)}>\r\n             Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n  </div>\r\n  <div className=\"text-center submitButton\">\r\n            <a onClick={createNewJob} style={{height:50,width:120,fontFamily:'sans-serif'}} name=\"addJob\" type=\"button\" className=\"btn btn-primary\">Add Job</a>\r\n          </div>\r\n</form>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\nexport default withRouter(CreateJobForm);","E:\\reactjs\\jobszone\\src\\components\\InternshipDetails.js",["224"],"import { API, graphqlOperation } from 'aws-amplify';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getJob } from '../graphql/queries';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nfunction InternshipDetails(){\r\n    let { jobId } = useParams();\r\n  const [jobDetails,setJobDetails]=useState([]);\r\n  const [jobDescription,setJobDescription]=useState([]);\r\n  const [desiredSkill,setDesiredSkill]=useState([]);\r\n  const [criteria,setCriteria]=useState([]);\r\n  const [perks,setPerks]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobDetails=async()=>{\r\n        const jobData=await API.graphql(\r\n          graphqlOperation(\r\n            getJob,{\r\n            id:jobId\r\n            }\r\n          )\r\n        );\r\n        \r\n      setJobDetails(jobData.data.getJob);\r\n      setJobDescription(jobData.data.getJob.jobDescription.items);\r\n      setDesiredSkill(jobData.data.getJob.jobSkills.items);\r\n      setCriteria(jobData.data.getJob.jobCretaria.items);\r\n      setPerks(jobData.data.getJob.perks.items);\r\n      \r\n\r\n      }\r\n\r\n      getJobDetails();\r\n\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n\r\n  },[]);\r\n    return (\r\n        <div className=\"jobContainer\">\r\n            <h1>{jobDetails.jobTitle}</h1>\r\n            <h4>{jobDetails.jobName}</h4>\r\n            <p>{jobDetails.companyName} <a href={`${jobDetails.companyWebsite}`}><FiExternalLink size={18}/></a></p>\r\n            <ul className=\"jobTopList\" >\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Stipend</li>\r\n                        <li><b>{jobDetails.salary}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Duration</li>\r\n                        <li><b>{jobDetails.duration}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Job Location</li>\r\n                        <li><b>{jobDetails.jobLocation}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Apply By</li>\r\n                        <li><b>{moment(jobDetails.lastDate).format('ll')}</b></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <h4 style={{marginTop:30}}>About Company<a href={`${jobDetails.comapanyWebsite}`}><FiExternalLink size={22}/></a></h4>\r\n            <p style={{marginTop:15}}>{jobDetails.aboutCompany}</p>\r\n            <h5>Job Description</h5>\r\n            <ul>\r\n                {jobDescription.map(jobDescription => <li>{jobDescription.content}</li>)}\r\n            </ul>\r\n            <h5>Desired Skills</h5>\r\n            <ul>\r\n            {desiredSkill.map(desiredSkill => <li>{desiredSkill.content}</li>)}\r\n            </ul>\r\n            <h5>Applying Critaria</h5>\r\n            <ul>\r\n            {criteria.map(criteria => <li>{criteria.content}</li>)}    \r\n            </ul>\r\n          <h5>Perks</h5>\r\n          <ul className=\"perks\">\r\n            {perks.map(perks => <li>{perks.content}</li>)}\r\n          </ul>\r\n          <h5>No of Position.</h5>\r\n          <p>{jobDetails.noOfPosition}</p>\r\n          <div className=\"text-center submitButton\">\r\n          <a href={`apply${jobId}`} style={{height:50,width:120,fontFamily:'sans-serif',fontSize:18,color:'white'}}  className=\"btn btn-primary\">Apply Now</a>\r\n          </div>\r\n              \r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default InternshipDetails;","E:\\reactjs\\jobszone\\src\\components\\JobCard.js",[],"E:\\reactjs\\jobszone\\src\\components\\CreateInternshipForm.js",[],"E:\\reactjs\\jobszone\\src\\components\\ApplyJobForm.js",[],"E:\\reactjs\\jobszone\\src\\components\\Header.js",[],"E:\\reactjs\\jobszone\\src\\components\\JobDetails.js",["225","226"],"\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getJob, listJobApplicants } from '../graphql/queries';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction JobDetails(props){\r\n  let { jobId } = useParams();\r\n  const [isApplied,setIsApplied]=useState(false);\r\n  const [jobDetails,setJobDetails]=useState([]);\r\n  const [jobDescription,setJobDescription]=useState([]);\r\n  const [desiredSkill,setDesiredSkill]=useState([]);\r\n  const [criteria,setCriteria]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobDetails=async()=>{\r\n        const jobData=await API.graphql(\r\n          graphqlOperation(\r\n            getJob,{\r\n            id:jobId\r\n            }\r\n          )\r\n        );\r\n        const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        const jobApplicants= await API.graphql(\r\n          graphqlOperation(\r\n            listJobApplicants,{\r\n              filter:{\r\n                userID: {contains: userInfo.attributes.sub},\r\n                jobID: {contains: jobId}\r\n              }\r\n            }\r\n          )\r\n        );\r\n        if(jobApplicants){\r\n          setIsApplied(true);\r\n        }\r\n        \r\n      setJobDetails(jobData.data.getJob);\r\n      setJobDescription(jobData.data.getJob.jobDescription.items);\r\n      setDesiredSkill(jobData.data.getJob.jobSkills.items);\r\n      setCriteria(jobData.data.getJob.jobCretaria.items);\r\n      \r\n\r\n      }\r\n\r\n      getJobDetails();\r\n\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n\r\n  },[]);\r\n     return (\r\n        <div>\r\n        <div className=\"jobContainer\">\r\n            <h1>{jobDetails.jobTitle}</h1>\r\n            <h4>{jobDetails.jobName}</h4>\r\n            <p>{jobDetails.companyName} <a href={`${jobDetails.companyWebsite}`}><FiExternalLink size={18}/></a></p>\r\n            <ul className=\"jobTopList\" >\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Salary</li>\r\n                        <li><b>{jobDetails.salary}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Experience</li>\r\n                        <li><b>{jobDetails.experience}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Job Location</li>\r\n                        <li><b>{jobDetails.jobLocation}</b></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <ul>\r\n                        <li style={{color:'grey'}}>Apply By</li>\r\n                        <li><b>{moment(jobDetails.lastDate).format('ll')}</b></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <h4 style={{marginTop:30}}>About Company<a href={`${jobDetails.companyWebsite}`}><FiExternalLink size={22}/></a></h4>\r\n            <p style={{marginTop:15}}>{jobDetails.aboutCompany}</p>\r\n            <h5>Job Description</h5>\r\n            <ul>\r\n                {jobDescription.map(jobDescription => <li>{jobDescription.content}</li>)}\r\n            </ul>\r\n            <h5>Desired Skills</h5>\r\n            <ul>\r\n            {desiredSkill.map(desiredSkill => <li>{desiredSkill.content}</li>)}\r\n            </ul>\r\n            <h5>Applying Critaria</h5>\r\n            <ul>\r\n            {criteria.map(criteria => <li>{criteria.content}</li>)}\r\n                \r\n            </ul>\r\n            <div className=\"text-center submitButton\">\r\n            <a href={`apply${jobId}`} style={{height:50,width:120,fontFamily:'sans-serif',fontSize:18,color:'white'}}  className=\"btn btn-primary\">Apply Now</a>\r\n          </div>\r\n        </div>\r\n    </div>   \r\n\r\n    );\r\n}\r\n\r\nexport default JobDetails;","E:\\reactjs\\jobszone\\src\\aws-exports.js",[],"E:\\reactjs\\jobszone\\src\\screens\\ProfileScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\ViewProfile.js",[],"E:\\reactjs\\jobszone\\src\\graphql\\queries.js",[],"E:\\reactjs\\jobszone\\src\\screens\\FirstRegisterScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\FirstRegister.js",["227"],"E:\\reactjs\\jobszone\\src\\graphql\\mutations.js",[],"E:\\reactjs\\jobszone\\src\\screens\\EditProfileScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\EditProfile.js",["228"],"import { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport React,{useEffect, useState} from 'react';\r\nimport {createUser, updateUser} from '../graphql/mutations';\r\nimport { getUser } from '../graphql/queries';\r\n\r\n    const EditProfile =()=>{\r\n    const[formState,updateFormState]=useState({\r\n      fname:'',lname:'',email:'',mobileNo:'',address:'',\r\n      age:20,sex:'',collegeName:'',degree:'',stream:'',\r\n      collegeAddress:'',courseDate:''\r\n\r\n    });\r\n    const[userId,setUserId]=useState('');\r\n\r\n    function handleChange(evt) {\r\n      const value = evt.target.value;\r\n      updateFormState({\r\n        ...formState,\r\n        [evt.target.name]: value\r\n      });\r\n    }\r\n \r\n   useEffect(()=>{\r\n       try{\r\n       const completeRegistration = async()=>{\r\n        const userInfo = await Auth.currentAuthenticatedUser({bypassCache:true});\r\n        const userData =await API.graphql(\r\n            graphqlOperation(\r\n                getUser,{id:userInfo.attributes.sub}\r\n            )\r\n        )\r\n        updateFormState({ email: userData.data.getUser.email });\r\n        updateFormState({ mobileNo: userData.data.getUser.mobileNo  });\r\n        updateFormState({ fname: userData.data.getUser.firstName });\r\n        updateFormState({ lname: userData.data.getUser.lastName  });\r\n        updateFormState({ address: userData.data.getUser.address });\r\n        updateFormState({ sex: userData.data.getUser.Sex });\r\n        updateFormState({ age: userData.data.getUser.Age });\r\n        updateFormState({ collegeName: userData.data.getUser.collegeName  });\r\n        updateFormState({ degree: userData.data.getUser.degree });\r\n        updateFormState({ stream: userData.data.getUser.branch  });\r\n        updateFormState({ collegeAddress: userData.data.getUser.collegeAddress });\r\n        updateFormState({ courseDate: userData.data.getUser.courseCompletion });\r\n        setUserId(userInfo.attributes.sub)\r\n       }\r\n\r\n       completeRegistration();\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n   },[]);\r\n   const submitForm = async()=>{\r\n    await API.graphql(\r\n      graphqlOperation(\r\n        updateUser,\r\n          {\r\n            input:{\r\n              id:`${userId}`,\r\n              firstName:formState.fname,\r\n              lastName :formState.lname,\r\n              age:formState.age,\r\n              sex:formState.sex,\r\n              email:formState.email,\r\n              mobileNo:formState.mobileNo,\r\n              address:formState.address,\r\n              collegeName:formState.collegeName,\r\n              degree:formState.degree,\r\n              branch:formState.stream,\r\n              courseCompletion:formState.courseDate,\r\n              collegeAddress:formState.collegeAddress\r\n            }\r\n\r\n          }\r\n      ))\r\n  }\r\n\r\n   console.log(formState);\r\n   console.log(userId);\r\n\r\n    return (\r\n\r\n\r\n    <div className=\"formContainer\">\r\n    <form >\r\n    <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"first-name\">First Name</label>\r\n      <input type=\"text\" value={formState.fname} onChange={handleChange} className=\"form-control\" name=\"fname\"  placeholder=\"Enter First Name\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"last-name\">Last Name</label>\r\n      <input type=\"text\" value={formState.lname} onChange={handleChange} className=\"form-control\" name=\"lname\"  placeholder=\"Enter Last Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"email\">Email</label>\r\n      <input type=\"email\" value={formState.email} onChange={handleChange} className=\"form-control\" name=\"email\"  placeholder=\"Enter Your Email\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"mobile-no\">Mobile No</label>\r\n      <input type=\"text\" value={formState.mobileNo}  onChange={handleChange} className=\"form-control\" name=\"mobileNo\"  placeholder=\"Enter Your Mobile No\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"age\">Age</label>\r\n      <input type=\"number\" value={formState.age} onChange={handleChange} className=\"form-control\" name=\"age\"  placeholder=\"Enter Your Age\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"sex\">Gender</label>\r\n    <select  value={formState.sex}  onChange={handleChange} className=\"form-control\" name=\"sex\" required>\r\n     <option value=''>Select Your Gender</option>\r\n      <option value='M'>Male</option>\r\n      <option value='F'>Female</option>\r\n      <option value='NB'>Can't prefer to say</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n      <label for=\"address\">Current Address</label>\r\n      <input type=\"text\" value={formState.address}  onChange={handleChange} className=\"form-control\" name=\"address\"  placeholder=\"Enter Your Current Address\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"college-name\">College Name</label>\r\n      <input type=\"text\" value={formState.collegeName}  onChange={handleChange} className=\"form-control\" name=\"collegeName\"  placeholder=\"Enter Your College Name\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"degree\">Degree</label>\r\n      <input type=\"text\" value={formState.degree} onChange={handleChange} className=\"form-control\" name=\"degree\"  placeholder=\"Enter Your Degree Name\" required/>\r\n    </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"stream\">Stream</label>\r\n      <input type=\"text\" value={formState.stream}  onChange={handleChange} className=\"form-control\" name=\"stream\" placeholder=\"Enter Your Stream\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"form-row\">\r\n   <div className=\"form-group col-md-6\">\r\n    <label for=\"collegeAddress\">College Address</label>\r\n   <input type=\"text\" value={formState.collegeAddress}  onChange={handleChange} className=\"form-control\" name=\"collegeAddress\"  required/>\r\n   </div>\r\n    <div className=\"form-group col-md-6\">\r\n    <label for=\"courseDate\">Course Completion Date</label>\r\n      <input type=\"date\" value={formState.courseDate}  onChange={handleChange} className=\"form-control\" name=\"courseDate\" required/>\r\n    </div>\r\n  </div>\r\n  <div className=\"text-center submitButton\">\r\n            <button  onClick={submitForm} style={{height:50,width:120,fontFamily:'sans-serif',color:'white',fontSize:20}} name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n          </div>\r\n</form>\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\nexport default EditProfile;","E:\\reactjs\\jobszone\\src\\mutations.js",[],"E:\\reactjs\\jobszone\\src\\screens\\InternshipScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\InternshipCard.js",[],"E:\\reactjs\\jobszone\\src\\screens\\CompanyScreen.js",["229"],"import React, { useState,useEffect } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, Auth, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\n\r\nfunction CompanyScreen(){\r\n  const [jobs,setJobs]=useState([]);\r\n  const [internships,setInternships]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobList= async()=>{\r\n      const userInfo=await Auth.currentAuthenticatedUser({bypassCache:true});\r\n      const jobList=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n              filter:{\r\n                jobType: {contains: \"job\"},\r\n                jobUserId: {contains: userInfo.attributes.sub},\r\n                jobStatus:{notContains:\"created\"}\r\n              }\r\n          }   \r\n      ));\r\n      const internshipList=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n              filter:{\r\n                jobType: {contains: \"internship\"},\r\n                jobUserId: {contains: userInfo.attributes.sub},\r\n                jobStatus:{notContains:\"created\"}\r\n              }\r\n          }   \r\n      ));\r\n      setJobs(jobList.data.listJobs.items);\r\n      setInternships(internshipList.data.listJobs.items);\r\n      }\r\n    \r\n      getJobList();\r\n    }\r\n    catch(e){\r\n      console.log(e)\r\n\r\n    }\r\n\r\n  },[]);\r\n    return (\r\n        <div class=\"admin\">\r\n  <header class=\"admin__header\">\r\n    <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n    <div class=\"toolbar\">\r\n      <h3 style={{color:'white'}}>.</h3>\r\n      <a href=\"#\" class=\"logout\">\r\n        Log Out\r\n      </a>\r\n    </div>\r\n  </header>\r\n  <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"company\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllInternships\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n  <main class=\"admin__main\">\r\n    <h2 style={{color:'rebeccapurple'}}>Dashboard</h2>\r\n    <div class=\"dashboard\">\r\n      <div class=\"dashboard__item\">\r\n        <div class=\"admincard\">\r\n          <h4>Total Jobs:</h4>\r\n        <h1 style={{fontSize:76,color:'rebeccapurple'}}>{jobs.length} Jobs</h1>\r\n        <a href=\"viewAllJobs\">\r\n                <div class=\"panel-footer\">\r\n                    <span class=\"pull-left\">View All Jobs</span>\r\n                    <span class=\"pull-right\"><i class=\"fa fa-arrow-circle-right\"></i></span>\r\n                    <div class=\"clearfix\"></div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"dashboard__item\">\r\n        <div class=\"admincard\">\r\n          <h4>Total Internships:</h4>\r\n        <h1 style={{fontSize:76,color:'rebeccapurple'}}>{internships.length} Internships</h1>\r\n        <a href=\"viewAllInternships\">\r\n                <div class=\"panel-footer\">\r\n                    <span class=\"pull-left\">View All Internship</span>\r\n                    <span class=\"pull-right\"><i class=\"fa fa-arrow-circle-right\"></i></span>\r\n                    <div class=\"clearfix\"></div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n      </div>\r\n      <div>\r\n      </div>\r\n\r\n    </div>\r\n  </main>\r\n  <footer class=\"admin__footer\">\r\n    <span>\r\n      &copy; 2021 JobsZone\r\n    </span>\r\n  </footer>\r\n</div>\r\n   );\r\n}\r\n\r\nexport default CompanyScreen;","E:\\reactjs\\jobszone\\src\\screens\\ViewAllJobsScreen.js",["230"],"E:\\reactjs\\jobszone\\src\\screens\\ViewAllInternshipsScreen.js",["231"],"E:\\reactjs\\jobszone\\src\\screens\\ViewJobApplicantsScreen.js",["232","233"],"E:\\reactjs\\jobszone\\src\\components\\MyAppications.js",[],"E:\\reactjs\\jobszone\\src\\screens\\MyAppicationsScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\JobSearchScreen.js",["234"],"import React, { useEffect, useState } from 'react';\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport './screensStyle.css';\r\nimport Search from '../components/Search';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction JobSearchScreen() {\r\n  let {searchTerm}=useParams();\r\n  console.log(searchTerm);\r\n  const isTablet = useMediaQuery({ query: '(max-width: 1100px)' })\r\n  const isMobile = useMediaQuery({\r\n    query: '(max-width: 600px)'\r\n  })\r\n  const [jobsByJobName,setJobsByJobName]=useState([]);\r\n  const [jobsByLocation,setJobsByLocation]=useState([]);\r\n  const [jobsByCompanyName,setJobsByCompanyName]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobList= async()=>{\r\n      const joblistByJobName=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n            filter:{\r\n                jobName: {contains: searchTerm}\r\n              } \r\n            }\r\n      ));\r\n      const joblistByCompanyName=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n            filter:{\r\n                companyName: {contains: searchTerm}\r\n              } \r\n            }\r\n      ));\r\n      const joblistByLocation=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n            filter:{\r\n                jobLocation: {contains: searchTerm}\r\n              } \r\n            }\r\n      ));\r\n      setJobsByJobName(joblistByJobName.data.listJobs.items);\r\n      setJobsByCompanyName(joblistByCompanyName.data.listJobs.items);\r\n      setJobsByLocation(joblistByLocation.data.listJobs.items);\r\n      }\r\n    \r\n      getJobList();\r\n    }\r\n    catch{\r\n\r\n    }\r\n\r\n  },[]);\r\n  return (\r\n    <div >\r\n     <Header />\r\n     <div className=\"LargeSearchContainer\" style={{marginTop:100,marginLeft:400}} >\r\n     <Search \r\n     searchValue={searchTerm}\r\n     />\r\n     </div>\r\n     <div className={ (isMobile) ? \"JobsSmall\" : ((isTablet) ? \"JobsMedium\" : \"JobsLarge\")} >\r\n     {\r\n       jobsByJobName.map(jobsByJobName => <JobCard \r\n        jobID={jobsByJobName.id}\r\n        companyName={jobsByJobName.companyName}\r\n        lastDate={jobsByJobName.lastDate}\r\n        role={jobsByJobName.jobName}\r\n        salary={jobsByJobName.salary}\r\n        experience={jobsByJobName.experience}\r\n        location={jobsByJobName.jobLocation}\r\n        />\r\n       )\r\n     }\r\n     {\r\n       jobsByCompanyName.map(jobsByCompanyName => <JobCard \r\n        jobID={jobsByCompanyName.id}\r\n        companyName={jobsByCompanyName.companyName}\r\n        lastDate={jobsByCompanyName.lastDate}\r\n        role={jobsByCompanyName.jobName}\r\n        salary={jobsByCompanyName.salary}\r\n        experience={jobsByCompanyName.experience}\r\n        location={jobsByLocation.jobLocation}\r\n        />\r\n       )\r\n     }\r\n     {\r\n       jobsByLocation.map(jobsByLocation => <JobCard \r\n        jobID={jobsByLocation.id}\r\n        companyName={jobsByLocation.companyName}\r\n        lastDate={jobsByLocation.lastDate}\r\n        role={jobsByLocation.jobName}\r\n        salary={jobsByLocation.salary}\r\n        experience={jobsByLocation.experience}\r\n        location={jobsByLocation.jobLocation}\r\n        />\r\n       )\r\n     }\r\n     </div>\r\n     <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobSearchScreen;\r\n","E:\\reactjs\\jobszone\\src\\components\\CompanyRegister.js",[],"E:\\reactjs\\jobszone\\src\\components\\EditCompanyProfile.js",[],"E:\\reactjs\\jobszone\\src\\screens\\AdminScreen.js",["235"],"import React, { useState,useEffect } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\n\r\nfunction AdminScreen(){\r\n  const [jobs,setJobs]=useState([]);\r\n  const [internships,setInternships]=useState([]);\r\n  useEffect(()=>{\r\n    try{\r\n      const getJobList= async()=>{\r\n      const jobList=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n              filter:{\r\n                jobType: {contains: \"job\"}\r\n              }\r\n          }   \r\n      ));\r\n      const internshipList=await API.graphql(\r\n        graphqlOperation(\r\n          listJobs,{\r\n              filter:{\r\n                jobType: {contains: \"internship\"}\r\n              }\r\n          }   \r\n      ));\r\n      setJobs(jobList.data.listJobs.items);\r\n      setInternships(internshipList.data.listJobs.items);\r\n      }\r\n    \r\n      getJobList();\r\n    }\r\n    catch(e){\r\n      console.log(e)\r\n\r\n    }\r\n\r\n  },[]);\r\n    return (\r\n        <div class=\"admin\">\r\n  <header class=\"admin__header\">\r\n    <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n    <div class=\"toolbar\">\r\n      <h3 style={{color:'white'}}>.</h3>\r\n      <a href=\"#\" class=\"logout\">\r\n        Log Out\r\n      </a>\r\n    </div>\r\n  </header>\r\n  <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"admin\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"approveJobs\">View all jobs requests</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminInternship\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllUsers\">View All users</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllCompanies\">View All Companies</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n  <main class=\"admin__main\">\r\n    <h2 style={{color:'rebeccapurple'}}>Dashboard</h2>\r\n    <div class=\"dashboard\">\r\n      <div class=\"dashboard__item\">\r\n        <div class=\"admincard\">\r\n          <h4>Total Jobs:</h4>\r\n        <h1 style={{fontSize:76,color:'rebeccapurple'}}>{jobs.length} Jobs</h1>\r\n        <a href=\"adminJobs\">\r\n                <div class=\"panel-footer\">\r\n                    <span class=\"pull-left\">View All Jobs</span>\r\n                </div>\r\n            </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"dashboard__item\">\r\n        <div class=\"admincard\">\r\n          <h4>Total Internships:</h4>\r\n        <h1 style={{fontSize:76,color:'rebeccapurple'}}>{internships.length} Internships</h1>\r\n        <a href=\"adminInternship\">\r\n                <div class=\"panel-footer\">\r\n                    <span class=\"pull-left\">View All Internship</span>\r\n                </div>\r\n            </a>\r\n        </div>\r\n      </div>\r\n   \r\n    </div>\r\n   \r\n  </main>\r\n  <footer class=\"admin__footer\">\r\n    <span>\r\n      &copy; 2021 JobsZone.\r\n    </span>\r\n  </footer>\r\n</div>\r\n   );\r\n}\r\n\r\nexport default AdminScreen;","E:\\reactjs\\jobszone\\src\\screens\\ViewAdminJobsScreen.js",["236","237"],"E:\\reactjs\\jobszone\\src\\screens\\ViewAdminInternshipsScreen.js",["238"],"E:\\reactjs\\jobszone\\src\\screens\\ViewAdminJobApplicantScreen.js",["239","240"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, graphqlOperation, Storage } from 'aws-amplify';\r\nimport {listJobApplicants} from '../graphql/queries';\r\n\r\nimport {Link, useParams, withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction ViewAdminJobApplicantsScreen(props){\r\n    const {jobId} =useParams();\r\n    const [jobApplicants,setJobApplicants]=useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n          const getJobApplicant=async()=>{\r\n          const AllApplicants=await API.graphql(\r\n            graphqlOperation(\r\n              listJobApplicants\r\n            )\r\n          )\r\n          setJobApplicants(AllApplicants.data.listJobApplicants.items)\r\n         \r\n          }\r\n        \r\n          getJobApplicant();\r\n        }\r\n        catch(e){\r\n          console.log(e)\r\n    \r\n        }\r\n    \r\n      },[]);\r\n      const getResumeUrl=async(resumeFile)=>{\r\n        const resumeUrl=await Storage.get(resumeFile);\r\n        console.log(resumeUrl);\r\n        window.open(resumeUrl, '_blank', 'noopener,noreferrer')\r\n        \r\n      }\r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"admin\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"approveJobs\">View all jobs requests</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminInternship\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllUsers\">View All users</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"viewAllCompanies\">View All Companies</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n        <main class=\"admin__main\">\r\n\r\n          <h2 style={{color:'rebeccapurple'}}>All Applicants </h2>\r\n          <p style={{color:'rebeccapurple'}}>For job/internship</p>\r\n          <div class=\"dashboard\">\r\n            <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Job Name</th>\r\n                        <th>Applicant Name</th>\r\n                        <th>College</th>\r\n                        <th>Email</th>\r\n                        <th>Mobile No.</th>\r\n                        <th>Applied Date</th>\r\n                        <th>View Resume</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobApplicants.map(jobApplicants=>\r\n                     \r\n                                <tr>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/job${jobApplicants.job.id}`\r\n                                            }}>{jobApplicants.job.jobName}</Link></td>\r\n                                    <td>{jobApplicants.user.firstName} {jobApplicants.user.lastName}</td>\r\n                                    <td>{jobApplicants.user.collegeName}</td>\r\n                                    <td>{jobApplicants.user.email}</td>\r\n                                    <td>{jobApplicants.user.mobileNo}</td>\r\n                                    <td>{moment(jobApplicants.createdAt).format('ll')}</td>\r\n                                    <td><Link onClick={() =>{getResumeUrl(jobApplicants.user.resumeFile)}} style={{color:'black'}}>View</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2018 Grid Inc.\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewAdminJobApplicantsScreen);","E:\\reactjs\\jobszone\\src\\screens\\ViewJobRequestsScreen.js",["241"],"import React, { useEffect, useState } from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../images/logo.png';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport {listJobs} from '../graphql/queries';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteJob, updateJob } from '../graphql/mutations';\r\n\r\nfunction ViewJobRequestsScreen(props){\r\n\r\n  const [jobs,setJobs]=useState([]);\r\n  useEffect(()=>{\r\n      try{\r\n        const getJobList= async()=>{\r\n        const joblist=await API.graphql(\r\n          graphqlOperation(\r\n            listJobs,{\r\n                filter:{\r\n                  jobStatus:{contains:\"created\"}\r\n                }\r\n            }   \r\n        ));\r\n        setJobs(joblist.data.listJobs.items);\r\n        }\r\n      \r\n        getJobList();\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n  \r\n      }\r\n  \r\n    },[]);\r\n\r\n    async function deleteThisJob (jobId){\r\n      await API.graphql(\r\n        graphqlOperation(\r\n          deleteJob,{\r\n            input:{\r\n              id:jobId\r\n            }\r\n          }\r\n        )\r\n      );\r\n      alert(\"Job Deleted Sucessfully\");\r\n      window.location.reload();\r\n    }; \r\n    const changeJobStatus=async(jobId)=>{\r\n        await API.graphql(\r\n          graphqlOperation(\r\n            updateJob,\r\n            {\r\n              input:{\r\n                id:jobId,\r\n                jobStatus:\"active\"\r\n              }\r\n            }\r\n          )\r\n        );\r\n      window.location.reload();\r\n    } \r\n\r\n    return (\r\n        <div class=\"admin\">\r\n        <header class=\"admin__header\">\r\n          <a href=\"/viewAllJobs\"><img style={{height:120,width:250}} className=\"logo\" src={logo} alt=\"\" /></a>\r\n          <div class=\"toolbar\">\r\n            <h3 style={{color:'white'}}>.</h3>\r\n            <a href=\"#\" class=\"logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <nav class=\"admin__nav\">\r\n    <ul class=\"menu\">\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"admin\">Dashboard</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">View all jobs requests</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminJobs\">View jobs</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">Create a new Job</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminInternship\">View internships</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createInternship\">Create a new internship</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"createJob\">View All users</a>\r\n      </li>\r\n      <li class=\"menu__item\">\r\n        <a class=\"menu__link\" href=\"adminApplicants\">View All Applicants</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n        <main class=\"admin__main\">\r\n        <h2 style={{color:'rebeccapurple'}}>All Job Requests </h2>\r\n          <div class=\"dashboard\">\r\n          <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                     <tr>\r\n                        <th>Job Name</th>\r\n                        <th>Job Type</th>\r\n                        <th>Company Name</th>\r\n                        <th>Job Location</th>\r\n                        <th>Post Date</th>\r\n                        <th>Last Date</th>\r\n                        <th>Approve</th>\r\n                        <th>Delete </th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                    {jobs.map(jobs=>\r\n                                <tr>\r\n                                    <td><Link style={{color:'black'}} to={{\r\n                                            pathname: `/editJob${jobs.id}`\r\n                                            }}>{jobs.jobName}</Link></td>\r\n                                    <td>{jobs.jobType}</td> \r\n                                    <td>{jobs.companyName}</td>        \r\n                                    <td>{jobs.jobLocation}</td>\r\n                                    <td>{moment(jobs.createdAt).format('ll')}</td>\r\n                                    <td>{moment(jobs.lastDate).format('ll')}</td>\r\n                                    <td><Link onClick={() =>{changeJobStatus(jobs.id)}}   style={{color:'black'}}>Approve</Link>\r\n                                    </td>\r\n                                    <td><Link onClick={() =>{deleteThisJob(jobs.id)}} style={{color:'black'}}>Remove</Link>\r\n                                    </td>\r\n                                </tr>\r\n                        )}\r\n                </tbody>\r\n            </table>\r\n         \r\n         \r\n          </div>\r\n        </main>\r\n        <footer class=\"admin__footer\">\r\n          <span>\r\n            &copy; 2021 JobsZone\r\n          </span>\r\n        </footer>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(ViewJobRequestsScreen);","E:\\reactjs\\jobszone\\src\\screens\\ViewAllUsersScreen.js",["242","243","244","245"],"E:\\reactjs\\jobszone\\src\\screens\\ViewAllCompaniesScreen.js",["246","247","248","249","250"],"E:\\reactjs\\jobszone\\src\\screens\\EditJobScreen.js",[],"E:\\reactjs\\jobszone\\src\\components\\EditJobForm.js",["251","252"],"E:\\reactjs\\jobszone\\src\\components\\EditInternshipForm.js",["253","254"],"E:\\reactjs\\jobszone\\src\\screens\\EditInternshipScreen.js",[],"E:\\reactjs\\jobszone\\src\\screens\\ViewAllJobApplicantsScreen.js",["255","256"],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":26},{"ruleId":"261","severity":1,"message":"265","line":1,"column":28,"nodeType":"263","messageId":"264","endLine":1,"endColumn":36},{"ruleId":"261","severity":1,"message":"266","line":31,"column":8,"nodeType":"263","messageId":"264","endLine":31,"endColumn":26},{"ruleId":"261","severity":1,"message":"267","line":8,"column":15,"nodeType":"263","messageId":"264","endLine":8,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":303,"column":13,"nodeType":"270","endLine":303,"endColumn":149},{"ruleId":"271","severity":1,"message":"272","line":43,"column":5,"nodeType":"273","endLine":43,"endColumn":7,"suggestions":"274"},{"ruleId":"261","severity":1,"message":"275","line":12,"column":10,"nodeType":"263","messageId":"264","endLine":12,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":56,"column":5,"nodeType":"273","endLine":56,"endColumn":7,"suggestions":"276"},{"ruleId":"261","severity":1,"message":"277","line":4,"column":10,"nodeType":"263","messageId":"264","endLine":4,"endColumn":20},{"ruleId":"261","severity":1,"message":"278","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":19},{"ruleId":"268","severity":1,"message":"279","line":52,"column":7,"nodeType":"270","endLine":52,"endColumn":34},{"ruleId":"268","severity":1,"message":"279","line":60,"column":13,"nodeType":"270","endLine":60,"endColumn":40},{"ruleId":"268","severity":1,"message":"279","line":57,"column":13,"nodeType":"270","endLine":57,"endColumn":40},{"ruleId":"271","severity":1,"message":"272","line":37,"column":7,"nodeType":"273","endLine":37,"endColumn":9,"suggestions":"280"},{"ruleId":"268","severity":1,"message":"279","line":106,"column":13,"nodeType":"270","endLine":106,"endColumn":40},{"ruleId":"271","severity":1,"message":"281","line":61,"column":5,"nodeType":"273","endLine":61,"endColumn":7,"suggestions":"282"},{"ruleId":"268","severity":1,"message":"279","line":47,"column":7,"nodeType":"270","endLine":47,"endColumn":34},{"ruleId":"261","severity":1,"message":"267","line":4,"column":15,"nodeType":"263","messageId":"264","endLine":4,"endColumn":19},{"ruleId":"268","severity":1,"message":"279","line":90,"column":13,"nodeType":"270","endLine":90,"endColumn":40},{"ruleId":"268","severity":1,"message":"279","line":87,"column":13,"nodeType":"270","endLine":87,"endColumn":40},{"ruleId":"261","severity":1,"message":"283","line":11,"column":12,"nodeType":"263","messageId":"264","endLine":11,"endColumn":17},{"ruleId":"268","severity":1,"message":"279","line":46,"column":13,"nodeType":"270","endLine":46,"endColumn":40},{"ruleId":"268","severity":1,"message":"279","line":70,"column":13,"nodeType":"270","endLine":70,"endColumn":40},{"ruleId":"261","severity":1,"message":"267","line":4,"column":15,"nodeType":"263","messageId":"264","endLine":4,"endColumn":19},{"ruleId":"261","severity":1,"message":"284","line":5,"column":9,"nodeType":"263","messageId":"264","endLine":5,"endColumn":17},{"ruleId":"261","severity":1,"message":"285","line":8,"column":10,"nodeType":"263","messageId":"264","endLine":8,"endColumn":19},{"ruleId":"268","severity":1,"message":"279","line":56,"column":13,"nodeType":"270","endLine":56,"endColumn":40},{"ruleId":"261","severity":1,"message":"267","line":4,"column":15,"nodeType":"263","messageId":"264","endLine":4,"endColumn":19},{"ruleId":"261","severity":1,"message":"284","line":5,"column":9,"nodeType":"263","messageId":"264","endLine":5,"endColumn":17},{"ruleId":"261","severity":1,"message":"286","line":7,"column":8,"nodeType":"263","messageId":"264","endLine":7,"endColumn":14},{"ruleId":"261","severity":1,"message":"285","line":8,"column":10,"nodeType":"263","messageId":"264","endLine":8,"endColumn":19},{"ruleId":"268","severity":1,"message":"279","line":93,"column":13,"nodeType":"270","endLine":93,"endColumn":40},{"ruleId":"271","severity":1,"message":"272","line":76,"column":5,"nodeType":"273","endLine":76,"endColumn":7,"suggestions":"287"},{"ruleId":"268","severity":1,"message":"269","line":283,"column":13,"nodeType":"270","endLine":283,"endColumn":149},{"ruleId":"271","severity":1,"message":"272","line":88,"column":5,"nodeType":"273","endLine":88,"endColumn":7,"suggestions":"288"},{"ruleId":"268","severity":1,"message":"269","line":339,"column":13,"nodeType":"270","endLine":339,"endColumn":149},{"ruleId":"271","severity":1,"message":"272","line":37,"column":9,"nodeType":"273","endLine":37,"endColumn":11,"suggestions":"289"},{"ruleId":"268","severity":1,"message":"279","line":107,"column":13,"nodeType":"270","endLine":107,"endColumn":40},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'EditInternshipForm' is defined but never used.","'Auth' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'jobId'. Either include it or remove the dependency array.","ArrayExpression",["292"],"'isApplied' is assigned a value but never used.",["293"],"'withRouter' is defined but never used.","'createUser' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["294"],"React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array.",["295"],"'jobId' is assigned a value but never used.","'listJobs' is defined but never used.","'deleteJob' is defined but never used.","'moment' is defined but never used.",["296"],["297"],["298"],"no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},{"desc":"299","fix":"301"},{"desc":"299","fix":"302"},{"desc":"303","fix":"304"},{"desc":"299","fix":"305"},{"desc":"299","fix":"306"},{"desc":"299","fix":"307"},"Update the dependencies array to be: [jobId]",{"range":"308","text":"309"},{"range":"310","text":"309"},{"range":"311","text":"309"},"Update the dependencies array to be: [searchTerm]",{"range":"312","text":"313"},{"range":"314","text":"309"},{"range":"315","text":"309"},{"range":"316","text":"309"},[1210,1212],"[jobId]",[1639,1641],[1028,1030],[1861,1863],"[searchTerm]",[3011,3013],[3524,3526],[1083,1085]]